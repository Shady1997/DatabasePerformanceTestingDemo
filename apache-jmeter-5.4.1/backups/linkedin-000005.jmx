<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.4.1">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="RECORD 05-07-22 2.12.26 AM" enabled="true">
      <stringProp name="TestPlan.comments">This test plan was created by the BlazeMeter converter v.3.1.23. Please contact support@blazemeter.com for further support.</stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="sec-ch-ua" elementType="Header">
            <stringProp name="Header.name">sec-ch-ua</stringProp>
            <stringProp name="Header.value">&quot; Not A;Brand&quot;;v=&quot;99&quot;, &quot;Chromium&quot;;v=&quot;101&quot;, &quot;Google Chrome&quot;;v=&quot;101&quot;</stringProp>
          </elementProp>
          <elementProp name="sec-ch-ua-mobile" elementType="Header">
            <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
            <stringProp name="Header.value">?0</stringProp>
          </elementProp>
          <elementProp name="sec-ch-ua-platform" elementType="Header">
            <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
            <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
          </elementProp>
          <elementProp name="User-Agent" elementType="Header">
            <stringProp name="Header.name">User-Agent</stringProp>
            <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.54 Safari/537.36</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="BASE_URL_1" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_1</stringProp>
            <stringProp name="Argument.value">www.linkedin.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_2" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_2</stringProp>
            <stringProp name="Argument.value">static-exp1.licdn.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_3" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_3</stringProp>
            <stringProp name="Argument.value">accounts.google.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_4" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_4</stringProp>
            <stringProp name="Argument.value">realtime.www.linkedin.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_5" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_5</stringProp>
            <stringProp name="Argument.value">platform.linkedin.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_6" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_6</stringProp>
            <stringProp name="Argument.value">media-exp1.licdn.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_7" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_7</stringProp>
            <stringProp name="Argument.value">media.licdn.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain"></stringProp>
        <stringProp name="HTTPSampler.port"></stringProp>
        <stringProp name="HTTPSampler.protocol"></stringProp>
        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
        <stringProp name="HTTPSampler.path"></stringProp>
        <boolProp name="HTTPSampler.image_parser">true</boolProp>
        <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
        <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
        <stringProp name="HTTPSampler.response_timeout"></stringProp>
      </ConfigTestElement>
      <hashTree/>
      <DNSCacheManager guiclass="DNSCachePanel" testclass="DNSCacheManager" testname="DNS Cache Manager" enabled="true">
        <collectionProp name="DNSCacheManager.servers"/>
        <boolProp name="DNSCacheManager.clearEachIteration">true</boolProp>
        <boolProp name="DNSCacheManager.isCustomResolver">false</boolProp>
      </DNSCacheManager>
      <hashTree/>
      <AuthManager guiclass="AuthPanel" testclass="AuthManager" testname="HTTP Authorization Manager" enabled="true">
        <collectionProp name="AuthManager.auth_list"/>
        <boolProp name="AuthManager.controlledByThreadGroup">false</boolProp>
      </AuthManager>
      <hashTree/>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
        <collectionProp name="CookieManager.cookies"/>
        <boolProp name="CookieManager.clearEachIteration">true</boolProp>
        <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
      </CookieManager>
      <hashTree/>
      <CacheManager guiclass="CacheManagerGui" testclass="CacheManager" testname="HTTP Cache Manager" enabled="true">
        <boolProp name="clearEachIteration">true</boolProp>
        <boolProp name="useExpires">false</boolProp>
        <boolProp name="CacheManager.controlledByThread">false</boolProp>
      </CacheManager>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration">0</stringProp>
        <stringProp name="ThreadGroup.delay">0</stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Launch" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.linkedin.com/" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path"></stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">none</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">0.0</stringProp>
              <stringProp name="ConstantTimer.delay">0</stringProp>
              <stringProp name="TestPlan.comments">Recorded time was 0 milliseconds</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Login" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.linkedin.com/uas/login-submit" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="loginCsrfParam" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">loginCsrfParam</stringProp>
                  <stringProp name="Argument.value">ef17e56f-ea17-431d-801d-c75dc6d02385</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="session_key" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">session_key</stringProp>
                  <stringProp name="Argument.value">shadyahmed01091997@outlook.com</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="pageInstance" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pageInstance</stringProp>
                  <stringProp name="Argument.value">urn:li:page:d_homepage-guest-home_jsbeacon;KTz+5X4ITeOiJZi54eTCGA==</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="controlId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">controlId</stringProp>
                  <stringProp name="Argument.value">d_homepage-guest-home-homepage-basic_signin-form_submit-button</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="session_password" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">session_password</stringProp>
                  <stringProp name="Argument.value">P@ssw0rd#11</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="trk" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">trk</stringProp>
                  <stringProp name="Argument.value">homepage-basic_signin-form_submit</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">uas/login-submit</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">41238.0</stringProp>
              <stringProp name="ConstantTimer.delay">20619</stringProp>
              <stringProp name="TestPlan.comments">Recorded time was 41238 milliseconds</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://realtime.www.linkedin.com/realtime/realtimeFrontendClientConnectivityTracking?action=sendHeartbeat" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;clientId&quot;:&quot;voyager-web&quot;,&quot;realtimeSessionId&quot;:&quot;15663493-82d3-4e01-9d72-b2dd2eb3c10d&quot;,&quot;mpName&quot;:&quot;voyager-web&quot;,&quot;mpVersion&quot;:&quot;1.10.4115&quot;,&quot;isLastHeartbeat&quot;:false,&quot;isFirstHeartbeat&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">realtime/realtimeFrontendClientConnectivityTracking?action=sendHeartbeat</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-LI-Track" elementType="Header">
                  <stringProp name="Header.name">X-LI-Track</stringProp>
                  <stringProp name="Header.value">{&quot;clientVersion&quot;:&quot;1.10.4115&quot;,&quot;mpVersion&quot;:&quot;1.10.4115&quot;,&quot;osName&quot;:&quot;web&quot;,&quot;timezoneOffset&quot;:2,&quot;timezone&quot;:&quot;Africa/Cairo&quot;,&quot;deviceFormFactor&quot;:&quot;DESKTOP&quot;,&quot;mpName&quot;:&quot;voyager-web&quot;,&quot;displayDensity&quot;:1.3499999046325684,&quot;displayWidth&quot;:1727.9998779296875,&quot;displayHeight&quot;:971.9999313354492}</stringProp>
                </elementProp>
                <elementProp name="x-li-recipe-accept" elementType="Header">
                  <stringProp name="Header.name">x-li-recipe-accept</stringProp>
                  <stringProp name="Header.value">application/vnd.linkedin.normalized+json+2.1</stringProp>
                </elementProp>
                <elementProp name="X-LI-Lang" elementType="Header">
                  <stringProp name="Header.name">X-LI-Lang</stringProp>
                  <stringProp name="Header.value">en_US</stringProp>
                </elementProp>
                <elementProp name="X-li-page-instance" elementType="Header">
                  <stringProp name="Header.name">X-li-page-instance</stringProp>
                  <stringProp name="Header.value">urn:li:page:feed_index_index;ae6cbebe-6b3e-41c8-935c-13dad16f1830</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="X-li-accept" elementType="Header">
                  <stringProp name="Header.name">X-li-accept</stringProp>
                  <stringProp name="Header.value">application/vnd.linkedin.normalized+json+2.1</stringProp>
                </elementProp>
                <elementProp name="Csrf-Token" elementType="Header">
                  <stringProp name="Header.name">Csrf-Token</stringProp>
                  <stringProp name="Header.value">ajax:7989996966019083188</stringProp>
                </elementProp>
                <elementProp name="X-RestLi-Protocol-Version" elementType="Header">
                  <stringProp name="Header.name">X-RestLi-Protocol-Version</stringProp>
                  <stringProp name="Header.value">2.0.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://static-exp1.licdn.com/sc/h/7438dbnn8galtczp2gk2s4bgb" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">sc/h/7438dbnn8galtczp2gk2s4bgb</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://realtime.www.linkedin.com/realtime/connect" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">realtime/connect</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-LI-Track" elementType="Header">
                  <stringProp name="Header.name">X-LI-Track</stringProp>
                  <stringProp name="Header.value">{&quot;clientVersion&quot;:&quot;1.10.4115&quot;,&quot;mpVersion&quot;:&quot;1.10.4115&quot;,&quot;osName&quot;:&quot;web&quot;,&quot;timezoneOffset&quot;:2,&quot;timezone&quot;:&quot;Africa/Cairo&quot;,&quot;deviceFormFactor&quot;:&quot;DESKTOP&quot;,&quot;mpName&quot;:&quot;voyager-web&quot;,&quot;displayDensity&quot;:1.3499999046325684,&quot;displayWidth&quot;:1727.9998779296875,&quot;displayHeight&quot;:971.9999313354492}</stringProp>
                </elementProp>
                <elementProp name="x-li-recipe-map" elementType="Header">
                  <stringProp name="Header.name">x-li-recipe-map</stringProp>
                  <stringProp name="Header.value">{&quot;messagingProgressIndicatorTopic&quot;:&quot;com.linkedin.voyager.dash.deco.messaging.RealtimeProgressIndicator-1&quot;,&quot;inAppAlertsTopic&quot;:&quot;com.linkedin.voyager.dash.deco.identity.notifications.InAppAlert-46&quot;}</stringProp>
                </elementProp>
                <elementProp name="x-li-recipe-accept" elementType="Header">
                  <stringProp name="Header.name">x-li-recipe-accept</stringProp>
                  <stringProp name="Header.value">application/vnd.linkedin.normalized+json+2.1</stringProp>
                </elementProp>
                <elementProp name="X-LI-Lang" elementType="Header">
                  <stringProp name="Header.name">X-LI-Lang</stringProp>
                  <stringProp name="Header.value">en_US</stringProp>
                </elementProp>
                <elementProp name="X-li-page-instance" elementType="Header">
                  <stringProp name="Header.name">X-li-page-instance</stringProp>
                  <stringProp name="Header.value">urn:li:page:feed_index_index;ae6cbebe-6b3e-41c8-935c-13dad16f1830</stringProp>
                </elementProp>
                <elementProp name="x-li-realtime-session" elementType="Header">
                  <stringProp name="Header.name">x-li-realtime-session</stringProp>
                  <stringProp name="Header.value">15663493-82d3-4e01-9d72-b2dd2eb3c10d</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/event-stream</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="X-RestLi-Protocol-Version" elementType="Header">
                  <stringProp name="Header.name">X-RestLi-Protocol-Version</stringProp>
                  <stringProp name="Header.value">2.0.0</stringProp>
                </elementProp>
                <elementProp name="Csrf-Token" elementType="Header">
                  <stringProp name="Header.name">Csrf-Token</stringProp>
                  <stringProp name="Header.value">ajax:7989996966019083188</stringProp>
                </elementProp>
                <elementProp name="X-li-accept" elementType="Header">
                  <stringProp name="Header.name">X-li-accept</stringProp>
                  <stringProp name="Header.value">application/vnd.linkedin.normalized+json+2.1</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.linkedin.com/voyager/api/voyagerLegoDashWidgetImpressionEvents" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;trackingToken&quot;:&quot;0OfmlWqldVomNMsSBA9z0Kc3RBsCZzkTsCfn9xk6NBkDsCfmhLjmNBkDsCcjRApnhPpnlNpl9JtmUCjAZ9l4BjjR0Zuk9OpmhOjThBpShFtOpQrDlLoORKrSBQoSlKrCZznThBpShFtORVt6BQrClAqlZApmlCnT1Lt6JPpmgZp4BQpmtAqnsCc3RKrSBQqndLk7hBpShFtOoMbz0Zpn9LoRdOpOoZsC5gr6lisCsCfmhLjmNBkD9D9z0ZrCZFt6BPrR1MtmZOpOoOfmhBt7dBtn5BkCRRjD1RrT9D9DhKtmZznSVLqnhzpmVKrScZp4BMtmZOpOpejQBkildfk3RVgD9Bp79L9DdKrSBQoSlKrCZznTBQsCBEt5ZKomxQnTdPpmMZp4BQrClJpSlP9DhBpShFtRZVt6BQrClAqjRAinhLr7cCt6NRompBp3RAinhRrTBxr2pApmlCnPdMqmxPpS5IpBZAfmlJokVBpS5M9D1JrzRAin1MoioMcPkRe3RAimVLqndOpnoCe3oQdj4MczsVfmh9tipxe3sMpzwQczkRp64JpzBAe2RyoPkQbm4Qcj8JdjtBc6kQoS4Zp4BQu6lQrCZz&quot;,&quot;visibility&quot;:&quot;SHOW&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">voyager/api/voyagerLegoDashWidgetImpressionEvents</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-restli-protocol-version" elementType="Header">
                  <stringProp name="Header.name">x-restli-protocol-version</stringProp>
                  <stringProp name="Header.value">2.0.0</stringProp>
                </elementProp>
                <elementProp name="x-li-lang" elementType="Header">
                  <stringProp name="Header.name">x-li-lang</stringProp>
                  <stringProp name="Header.value">en_US</stringProp>
                </elementProp>
                <elementProp name="x-li-page-instance" elementType="Header">
                  <stringProp name="Header.name">x-li-page-instance</stringProp>
                  <stringProp name="Header.value">urn:li:page:d_flagship3_feed;rmy+vms+QciTXBPa0W8YMA==</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">application/vnd.linkedin.normalized+json+2.1</stringProp>
                </elementProp>
                <elementProp name="csrf-token" elementType="Header">
                  <stringProp name="Header.name">csrf-token</stringProp>
                  <stringProp name="Header.value">ajax:7989996966019083188</stringProp>
                </elementProp>
                <elementProp name="x-li-track" elementType="Header">
                  <stringProp name="Header.name">x-li-track</stringProp>
                  <stringProp name="Header.value">{&quot;clientVersion&quot;:&quot;1.10.4115&quot;,&quot;mpVersion&quot;:&quot;1.10.4115&quot;,&quot;osName&quot;:&quot;web&quot;,&quot;timezoneOffset&quot;:2,&quot;timezone&quot;:&quot;Africa/Cairo&quot;,&quot;deviceFormFactor&quot;:&quot;DESKTOP&quot;,&quot;mpName&quot;:&quot;voyager-web&quot;,&quot;displayDensity&quot;:1.3499999046325684,&quot;displayWidth&quot;:1727.9998779296875,&quot;displayHeight&quot;:971.9999313354492}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.linkedin.com/voyager/api/messaging/presenceStatuses" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="ids" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ids</stringProp>
                  <stringProp name="Argument.value">List(urn:li:fs_miniProfile:ACoAADSKoE0BVy3Xm0KIABjfLV6jsVe_zrJ1LRg,urn:li:fs_miniProfile:ACoAABHKBcUBNGFhrqqX0nD8XTpOWalyyOhY-YA,urn:li:fs_miniProfile:ACoAACt4jyEBoisbAnxiWLUJjBXmFy6UGQDHA0k)</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">voyager/api/messaging/presenceStatuses</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-li-track" elementType="Header">
                  <stringProp name="Header.name">x-li-track</stringProp>
                  <stringProp name="Header.value">{&quot;clientVersion&quot;:&quot;1.10.4115&quot;,&quot;mpVersion&quot;:&quot;1.10.4115&quot;,&quot;osName&quot;:&quot;web&quot;,&quot;timezoneOffset&quot;:2,&quot;timezone&quot;:&quot;Africa/Cairo&quot;,&quot;deviceFormFactor&quot;:&quot;DESKTOP&quot;,&quot;mpName&quot;:&quot;voyager-web&quot;,&quot;displayDensity&quot;:1.3499999046325684,&quot;displayWidth&quot;:1727.9998779296875,&quot;displayHeight&quot;:971.9999313354492}</stringProp>
                </elementProp>
                <elementProp name="x-li-lang" elementType="Header">
                  <stringProp name="Header.name">x-li-lang</stringProp>
                  <stringProp name="Header.value">en_US</stringProp>
                </elementProp>
                <elementProp name="x-li-page-instance" elementType="Header">
                  <stringProp name="Header.name">x-li-page-instance</stringProp>
                  <stringProp name="Header.value">urn:li:page:d_flagship3_feed;rmy+vms+QciTXBPa0W8YMA==</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">application/vnd.linkedin.normalized+json+2.1</stringProp>
                </elementProp>
                <elementProp name="csrf-token" elementType="Header">
                  <stringProp name="Header.name">csrf-token</stringProp>
                  <stringProp name="Header.value">ajax:7989996966019083188</stringProp>
                </elementProp>
                <elementProp name="x-restli-protocol-version" elementType="Header">
                  <stringProp name="Header.name">x-restli-protocol-version</stringProp>
                  <stringProp name="Header.value">2.0.0</stringProp>
                </elementProp>
                <elementProp name="x-http-method-override" elementType="Header">
                  <stringProp name="Header.name">x-http-method-override</stringProp>
                  <stringProp name="Header.value">GET</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://realtime.www.linkedin.com/realtime/realtimeFrontendTimestamp" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">realtime/realtimeFrontendTimestamp</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-RestLi-Protocol-Version" elementType="Header">
                  <stringProp name="Header.name">X-RestLi-Protocol-Version</stringProp>
                  <stringProp name="Header.value">2.0.0</stringProp>
                </elementProp>
                <elementProp name="x-li-recipe-accept" elementType="Header">
                  <stringProp name="Header.name">x-li-recipe-accept</stringProp>
                  <stringProp name="Header.value">application/vnd.linkedin.normalized+json+2.1</stringProp>
                </elementProp>
                <elementProp name="X-LI-Lang" elementType="Header">
                  <stringProp name="Header.name">X-LI-Lang</stringProp>
                  <stringProp name="Header.value">en_US</stringProp>
                </elementProp>
                <elementProp name="X-li-page-instance" elementType="Header">
                  <stringProp name="Header.name">X-li-page-instance</stringProp>
                  <stringProp name="Header.value">urn:li:page:d_flagship3_feed;rmy+vms+QciTXBPa0W8YMA==</stringProp>
                </elementProp>
                <elementProp name="X-li-accept" elementType="Header">
                  <stringProp name="Header.name">X-li-accept</stringProp>
                  <stringProp name="Header.value">application/vnd.linkedin.normalized+json+2.1</stringProp>
                </elementProp>
                <elementProp name="Csrf-Token" elementType="Header">
                  <stringProp name="Header.name">Csrf-Token</stringProp>
                  <stringProp name="Header.value">ajax:7989996966019083188</stringProp>
                </elementProp>
                <elementProp name="X-LI-Track" elementType="Header">
                  <stringProp name="Header.name">X-LI-Track</stringProp>
                  <stringProp name="Header.value">{&quot;clientVersion&quot;:&quot;1.10.4115&quot;,&quot;mpVersion&quot;:&quot;1.10.4115&quot;,&quot;osName&quot;:&quot;web&quot;,&quot;timezoneOffset&quot;:2,&quot;timezone&quot;:&quot;Africa/Cairo&quot;,&quot;deviceFormFactor&quot;:&quot;DESKTOP&quot;,&quot;mpName&quot;:&quot;voyager-web&quot;,&quot;displayDensity&quot;:1.3499999046325684,&quot;displayWidth&quot;:1727.9998779296875,&quot;displayHeight&quot;:971.9999313354492}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://media-exp1.licdn.com/dms/image/C510BAQHuVrAgR-7UBA/company-logo_100_100/0/1557904072910?e=1660176000&amp;v=beta&amp;t=Zcxi59tERSfRYy0JL0i8f_L7d6E7R5PIOn7i4zEoG2g" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">Zcxi59tERSfRYy0JL0i8f_L7d6E7R5PIOn7i4zEoG2g</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="e" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">e</stringProp>
                  <stringProp name="Argument.value">1660176000</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">beta</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_6}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">dms/image/C510BAQHuVrAgR-7UBA/company-logo_100_100/0/1557904072910</stringProp>
            <stringProp name="HTTPSampler.method">HEAD</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://media-exp1.licdn.com/dms/image/C4E22AQETik5t6hoF_Q/feedshare-shrink_2048_1536/0/1651827610963?e=1654732800&amp;v=beta&amp;t=v5mBMzZOjcKFf7SRwmBZtdYnwRj67iAAuFaESCIF2i0" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">v5mBMzZOjcKFf7SRwmBZtdYnwRj67iAAuFaESCIF2i0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="e" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">e</stringProp>
                  <stringProp name="Argument.value">1654732800</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">beta</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_6}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">dms/image/C4E22AQETik5t6hoF_Q/feedshare-shrink_2048_1536/0/1651827610963</stringProp>
            <stringProp name="HTTPSampler.method">HEAD</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://media-exp1.licdn.com/dms/image/C4E22AQH6FUB25nWqmw/feedshare-shrink_2048_1536/0/1651827610596?e=1654732800&amp;v=beta&amp;t=rREETTpXHOGN_zrJXYsR547OqEAWJvJhio0eFAiJDpU" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">rREETTpXHOGN_zrJXYsR547OqEAWJvJhio0eFAiJDpU</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="e" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">e</stringProp>
                  <stringProp name="Argument.value">1654732800</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">beta</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_6}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">dms/image/C4E22AQH6FUB25nWqmw/feedshare-shrink_2048_1536/0/1651827610596</stringProp>
            <stringProp name="HTTPSampler.method">HEAD</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.linkedin.com/voyager/api/voyagerCommunicationsTabBadges?q=tabBadges&amp;countFrom=0" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="q" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">q</stringProp>
                  <stringProp name="Argument.value">tabBadges</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="countFrom" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">countFrom</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">voyager/api/voyagerCommunicationsTabBadges</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-restli-protocol-version" elementType="Header">
                  <stringProp name="Header.name">x-restli-protocol-version</stringProp>
                  <stringProp name="Header.value">2.0.0</stringProp>
                </elementProp>
                <elementProp name="x-li-lang" elementType="Header">
                  <stringProp name="Header.name">x-li-lang</stringProp>
                  <stringProp name="Header.value">en_US</stringProp>
                </elementProp>
                <elementProp name="x-li-page-instance" elementType="Header">
                  <stringProp name="Header.name">x-li-page-instance</stringProp>
                  <stringProp name="Header.value">urn:li:page:d_flagship3_feed;rmy+vms+QciTXBPa0W8YMA==</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">application/vnd.linkedin.normalized+json+2.1</stringProp>
                </elementProp>
                <elementProp name="csrf-token" elementType="Header">
                  <stringProp name="Header.name">csrf-token</stringProp>
                  <stringProp name="Header.value">ajax:7989996966019083188</stringProp>
                </elementProp>
                <elementProp name="x-li-track" elementType="Header">
                  <stringProp name="Header.name">x-li-track</stringProp>
                  <stringProp name="Header.value">{&quot;clientVersion&quot;:&quot;1.10.4115&quot;,&quot;mpVersion&quot;:&quot;1.10.4115&quot;,&quot;osName&quot;:&quot;web&quot;,&quot;timezoneOffset&quot;:2,&quot;timezone&quot;:&quot;Africa/Cairo&quot;,&quot;deviceFormFactor&quot;:&quot;DESKTOP&quot;,&quot;mpName&quot;:&quot;voyager-web&quot;,&quot;displayDensity&quot;:1.3499999046325684,&quot;displayWidth&quot;:1727.9998779296875,&quot;displayHeight&quot;:971.9999313354492}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.linkedin.com/litms/api/metadata/user" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">litms/api/metadata/user</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://media-exp1.licdn.com/dms/image/C4E22AQGNwZpCTDoNvQ/feedshare-shrink_2048_1536/0/1651827610897?e=1654732800&amp;v=beta&amp;t=h6gJEuFCxFuQd0x8pIfNPTIpNomUCvAaAModBj1ieC4" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">h6gJEuFCxFuQd0x8pIfNPTIpNomUCvAaAModBj1ieC4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="e" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">e</stringProp>
                  <stringProp name="Argument.value">1654732800</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">beta</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_6}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">dms/image/C4E22AQGNwZpCTDoNvQ/feedshare-shrink_2048_1536/0/1651827610897</stringProp>
            <stringProp name="HTTPSampler.method">HEAD</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://media-exp1.licdn.com/dms/image/C5603AQGvR5IZ-nL0Lg/profile-displayphoto-shrink_100_100/0/1650572201237?e=1657152000&amp;v=beta&amp;t=FILYQzjC0fhMoAiImd7ebNeREAlTy1PL8vATfy60EJE" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">FILYQzjC0fhMoAiImd7ebNeREAlTy1PL8vATfy60EJE</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="e" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">e</stringProp>
                  <stringProp name="Argument.value">1657152000</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">beta</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_6}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">dms/image/C5603AQGvR5IZ-nL0Lg/profile-displayphoto-shrink_100_100/0/1650572201237</stringProp>
            <stringProp name="HTTPSampler.method">HEAD</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://media-exp1.licdn.com/dms/image/C4D03AQHa_mPZa1h-7A/profile-displayphoto-shrink_100_100/0/1623971309557?e=1657152000&amp;v=beta&amp;t=s3eJ52BneC-gJP4_Ng5iW4YAOOS-gbGgvjHyaCrdCq4" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">s3eJ52BneC-gJP4_Ng5iW4YAOOS-gbGgvjHyaCrdCq4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="e" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">e</stringProp>
                  <stringProp name="Argument.value">1657152000</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">beta</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_6}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">dms/image/C4D03AQHa_mPZa1h-7A/profile-displayphoto-shrink_100_100/0/1623971309557</stringProp>
            <stringProp name="HTTPSampler.method">HEAD</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://media-exp1.licdn.com/dms/image/D5635AQFGMwzMeYmdDg/profile-framedphoto-shrink_100_100/0/1642515924212?e=1651971600&amp;v=beta&amp;t=DNbzZWz-LR-BUq4leQmbRPr5t3UqUVL8RuKgUEg65nw" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">DNbzZWz-LR-BUq4leQmbRPr5t3UqUVL8RuKgUEg65nw</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="e" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">e</stringProp>
                  <stringProp name="Argument.value">1651971600</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">beta</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_6}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">dms/image/D5635AQFGMwzMeYmdDg/profile-framedphoto-shrink_100_100/0/1642515924212</stringProp>
            <stringProp name="HTTPSampler.method">HEAD</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://media-exp1.licdn.com/dms/image/C560BAQEWL3x6YrK4TQ/company-logo_100_100/0/1612473028270?e=1660176000&amp;v=beta&amp;t=Va440BHbASyYBzGELDoxyftw7GE3XjmyyRRSthuGBkw" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">Va440BHbASyYBzGELDoxyftw7GE3XjmyyRRSthuGBkw</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="e" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">e</stringProp>
                  <stringProp name="Argument.value">1660176000</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">beta</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_6}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">dms/image/C560BAQEWL3x6YrK4TQ/company-logo_100_100/0/1612473028270</stringProp>
            <stringProp name="HTTPSampler.method">HEAD</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://media-exp1.licdn.com/dms/image/sync/C5618AQGlgpInthpwOw/companyUpdate-article-image-shrink_627_1200/0/1603150510535?e=1654732800&amp;v=beta&amp;t=YAaSXPEstjixDOS0azJspswozHMLjQHkSXggpp6sNxc" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">YAaSXPEstjixDOS0azJspswozHMLjQHkSXggpp6sNxc</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="e" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">e</stringProp>
                  <stringProp name="Argument.value">1654732800</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">beta</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_6}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">dms/image/sync/C5618AQGlgpInthpwOw/companyUpdate-article-image-shrink_627_1200/0/1603150510535</stringProp>
            <stringProp name="HTTPSampler.method">HEAD</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.linkedin.com/voyager/api/identity/profiles/urn%3Ali%3Afs_miniProfile%3AACoAADnvx2wBJOj3dM0bWBq8OBIYzq-yFhv74O8/messagingSettings" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">voyager/api/identity/profiles/urn%3Ali%3Afs_miniProfile%3AACoAADnvx2wBJOj3dM0bWBq8OBIYzq-yFhv74O8/messagingSettings</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-restli-protocol-version" elementType="Header">
                  <stringProp name="Header.name">x-restli-protocol-version</stringProp>
                  <stringProp name="Header.value">2.0.0</stringProp>
                </elementProp>
                <elementProp name="x-li-lang" elementType="Header">
                  <stringProp name="Header.name">x-li-lang</stringProp>
                  <stringProp name="Header.value">en_US</stringProp>
                </elementProp>
                <elementProp name="x-li-page-instance" elementType="Header">
                  <stringProp name="Header.name">x-li-page-instance</stringProp>
                  <stringProp name="Header.value">urn:li:page:d_flagship3_feed;rmy+vms+QciTXBPa0W8YMA==</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">application/vnd.linkedin.normalized+json+2.1</stringProp>
                </elementProp>
                <elementProp name="csrf-token" elementType="Header">
                  <stringProp name="Header.name">csrf-token</stringProp>
                  <stringProp name="Header.value">ajax:7989996966019083188</stringProp>
                </elementProp>
                <elementProp name="x-li-track" elementType="Header">
                  <stringProp name="Header.name">x-li-track</stringProp>
                  <stringProp name="Header.value">{&quot;clientVersion&quot;:&quot;1.10.4115&quot;,&quot;mpVersion&quot;:&quot;1.10.4115&quot;,&quot;osName&quot;:&quot;web&quot;,&quot;timezoneOffset&quot;:2,&quot;timezone&quot;:&quot;Africa/Cairo&quot;,&quot;deviceFormFactor&quot;:&quot;DESKTOP&quot;,&quot;mpName&quot;:&quot;voyager-web&quot;,&quot;displayDensity&quot;:1.3499999046325684,&quot;displayWidth&quot;:1727.9998779296875,&quot;displayHeight&quot;:971.9999313354492}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.linkedin.com/voyager/api/growth/pageContent/messaging_realtime?slotId=onboarding" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="slotId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">slotId</stringProp>
                  <stringProp name="Argument.value">onboarding</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">voyager/api/growth/pageContent/messaging_realtime</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-restli-protocol-version" elementType="Header">
                  <stringProp name="Header.name">x-restli-protocol-version</stringProp>
                  <stringProp name="Header.value">2.0.0</stringProp>
                </elementProp>
                <elementProp name="x-li-lang" elementType="Header">
                  <stringProp name="Header.name">x-li-lang</stringProp>
                  <stringProp name="Header.value">en_US</stringProp>
                </elementProp>
                <elementProp name="x-li-page-instance" elementType="Header">
                  <stringProp name="Header.name">x-li-page-instance</stringProp>
                  <stringProp name="Header.value">urn:li:page:d_flagship3_feed;rmy+vms+QciTXBPa0W8YMA==</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">application/vnd.linkedin.normalized+json+2.1</stringProp>
                </elementProp>
                <elementProp name="csrf-token" elementType="Header">
                  <stringProp name="Header.name">csrf-token</stringProp>
                  <stringProp name="Header.value">ajax:7989996966019083188</stringProp>
                </elementProp>
                <elementProp name="x-li-track" elementType="Header">
                  <stringProp name="Header.name">x-li-track</stringProp>
                  <stringProp name="Header.value">{&quot;clientVersion&quot;:&quot;1.10.4115&quot;,&quot;mpVersion&quot;:&quot;1.10.4115&quot;,&quot;osName&quot;:&quot;web&quot;,&quot;timezoneOffset&quot;:2,&quot;timezone&quot;:&quot;Africa/Cairo&quot;,&quot;deviceFormFactor&quot;:&quot;DESKTOP&quot;,&quot;mpName&quot;:&quot;voyager-web&quot;,&quot;displayDensity&quot;:1.3499999046325684,&quot;displayWidth&quot;:1727.9998779296875,&quot;displayHeight&quot;:971.9999313354492}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.linkedin.com/voyager/api/messaging/conversations?q=syncToken" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="q" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">q</stringProp>
                  <stringProp name="Argument.value">syncToken</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">voyager/api/messaging/conversations</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-restli-protocol-version" elementType="Header">
                  <stringProp name="Header.name">x-restli-protocol-version</stringProp>
                  <stringProp name="Header.value">2.0.0</stringProp>
                </elementProp>
                <elementProp name="x-li-lang" elementType="Header">
                  <stringProp name="Header.name">x-li-lang</stringProp>
                  <stringProp name="Header.value">en_US</stringProp>
                </elementProp>
                <elementProp name="x-li-page-instance" elementType="Header">
                  <stringProp name="Header.name">x-li-page-instance</stringProp>
                  <stringProp name="Header.value">urn:li:page:d_flagship3_feed;rmy+vms+QciTXBPa0W8YMA==</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">application/vnd.linkedin.normalized+json+2.1</stringProp>
                </elementProp>
                <elementProp name="csrf-token" elementType="Header">
                  <stringProp name="Header.name">csrf-token</stringProp>
                  <stringProp name="Header.value">ajax:7989996966019083188</stringProp>
                </elementProp>
                <elementProp name="x-li-track" elementType="Header">
                  <stringProp name="Header.name">x-li-track</stringProp>
                  <stringProp name="Header.value">{&quot;clientVersion&quot;:&quot;1.10.4115&quot;,&quot;mpVersion&quot;:&quot;1.10.4115&quot;,&quot;osName&quot;:&quot;web&quot;,&quot;timezoneOffset&quot;:2,&quot;timezone&quot;:&quot;Africa/Cairo&quot;,&quot;deviceFormFactor&quot;:&quot;DESKTOP&quot;,&quot;mpName&quot;:&quot;voyager-web&quot;,&quot;displayDensity&quot;:1.3499999046325684,&quot;displayWidth&quot;:1727.9998779296875,&quot;displayHeight&quot;:971.9999313354492}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.linkedin.com/voyager/api/messaging/conversationBundles" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">voyager/api/messaging/conversationBundles</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-restli-protocol-version" elementType="Header">
                  <stringProp name="Header.name">x-restli-protocol-version</stringProp>
                  <stringProp name="Header.value">2.0.0</stringProp>
                </elementProp>
                <elementProp name="x-li-lang" elementType="Header">
                  <stringProp name="Header.name">x-li-lang</stringProp>
                  <stringProp name="Header.value">en_US</stringProp>
                </elementProp>
                <elementProp name="x-li-page-instance" elementType="Header">
                  <stringProp name="Header.name">x-li-page-instance</stringProp>
                  <stringProp name="Header.value">urn:li:page:d_flagship3_feed;rmy+vms+QciTXBPa0W8YMA==</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">application/vnd.linkedin.normalized+json+2.1</stringProp>
                </elementProp>
                <elementProp name="csrf-token" elementType="Header">
                  <stringProp name="Header.name">csrf-token</stringProp>
                  <stringProp name="Header.value">ajax:7989996966019083188</stringProp>
                </elementProp>
                <elementProp name="x-li-track" elementType="Header">
                  <stringProp name="Header.name">x-li-track</stringProp>
                  <stringProp name="Header.value">{&quot;clientVersion&quot;:&quot;1.10.4115&quot;,&quot;mpVersion&quot;:&quot;1.10.4115&quot;,&quot;osName&quot;:&quot;web&quot;,&quot;timezoneOffset&quot;:2,&quot;timezone&quot;:&quot;Africa/Cairo&quot;,&quot;deviceFormFactor&quot;:&quot;DESKTOP&quot;,&quot;mpName&quot;:&quot;voyager-web&quot;,&quot;displayDensity&quot;:1.3499999046325684,&quot;displayWidth&quot;:1727.9998779296875,&quot;displayHeight&quot;:971.9999313354492}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.linkedin.com/voyager/api/growth/pageContent/messaging_presence?slotId=onboarding" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="slotId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">slotId</stringProp>
                  <stringProp name="Argument.value">onboarding</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">voyager/api/growth/pageContent/messaging_presence</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-restli-protocol-version" elementType="Header">
                  <stringProp name="Header.name">x-restli-protocol-version</stringProp>
                  <stringProp name="Header.value">2.0.0</stringProp>
                </elementProp>
                <elementProp name="x-li-lang" elementType="Header">
                  <stringProp name="Header.name">x-li-lang</stringProp>
                  <stringProp name="Header.value">en_US</stringProp>
                </elementProp>
                <elementProp name="x-li-page-instance" elementType="Header">
                  <stringProp name="Header.name">x-li-page-instance</stringProp>
                  <stringProp name="Header.value">urn:li:page:d_flagship3_feed;rmy+vms+QciTXBPa0W8YMA==</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">application/vnd.linkedin.normalized+json+2.1</stringProp>
                </elementProp>
                <elementProp name="csrf-token" elementType="Header">
                  <stringProp name="Header.name">csrf-token</stringProp>
                  <stringProp name="Header.value">ajax:7989996966019083188</stringProp>
                </elementProp>
                <elementProp name="x-li-track" elementType="Header">
                  <stringProp name="Header.name">x-li-track</stringProp>
                  <stringProp name="Header.value">{&quot;clientVersion&quot;:&quot;1.10.4115&quot;,&quot;mpVersion&quot;:&quot;1.10.4115&quot;,&quot;osName&quot;:&quot;web&quot;,&quot;timezoneOffset&quot;:2,&quot;timezone&quot;:&quot;Africa/Cairo&quot;,&quot;deviceFormFactor&quot;:&quot;DESKTOP&quot;,&quot;mpName&quot;:&quot;voyager-web&quot;,&quot;displayDensity&quot;:1.3499999046325684,&quot;displayWidth&quot;:1727.9998779296875,&quot;displayHeight&quot;:971.9999313354492}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.linkedin.com/voyager/api/messaging/presenceStatuses" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="ids" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ids</stringProp>
                  <stringProp name="Argument.value">List(urn:li:fs_miniProfile:ACoAADnvx2wBJOj3dM0bWBq8OBIYzq-yFhv74O8)</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">voyager/api/messaging/presenceStatuses</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-li-track" elementType="Header">
                  <stringProp name="Header.name">x-li-track</stringProp>
                  <stringProp name="Header.value">{&quot;clientVersion&quot;:&quot;1.10.4115&quot;,&quot;mpVersion&quot;:&quot;1.10.4115&quot;,&quot;osName&quot;:&quot;web&quot;,&quot;timezoneOffset&quot;:2,&quot;timezone&quot;:&quot;Africa/Cairo&quot;,&quot;deviceFormFactor&quot;:&quot;DESKTOP&quot;,&quot;mpName&quot;:&quot;voyager-web&quot;,&quot;displayDensity&quot;:1.3499999046325684,&quot;displayWidth&quot;:1727.9998779296875,&quot;displayHeight&quot;:971.9999313354492}</stringProp>
                </elementProp>
                <elementProp name="x-li-lang" elementType="Header">
                  <stringProp name="Header.name">x-li-lang</stringProp>
                  <stringProp name="Header.value">en_US</stringProp>
                </elementProp>
                <elementProp name="x-li-page-instance" elementType="Header">
                  <stringProp name="Header.name">x-li-page-instance</stringProp>
                  <stringProp name="Header.value">urn:li:page:d_flagship3_feed;rmy+vms+QciTXBPa0W8YMA==</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">application/vnd.linkedin.normalized+json+2.1</stringProp>
                </elementProp>
                <elementProp name="csrf-token" elementType="Header">
                  <stringProp name="Header.name">csrf-token</stringProp>
                  <stringProp name="Header.value">ajax:7989996966019083188</stringProp>
                </elementProp>
                <elementProp name="x-restli-protocol-version" elementType="Header">
                  <stringProp name="Header.name">x-restli-protocol-version</stringProp>
                  <stringProp name="Header.value">2.0.0</stringProp>
                </elementProp>
                <elementProp name="x-http-method-override" elementType="Header">
                  <stringProp name="Header.name">x-http-method-override</stringProp>
                  <stringProp name="Header.value">GET</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.linkedin.com/sensorCollect/?action=reportMetrics" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;metrics&quot;:[{&quot;groupName&quot;:&quot;feed&quot;,&quot;counterMetrics&quot;:{&quot;pem.Voyager - Homepage.feed-interest-panel.totalCallCount&quot;:1,&quot;pem.Voyager - Homepage.feed-identity-module.totalCallCount&quot;:1,&quot;pem.Voyager - Homepage.feed-storyline-module.totalCallCount&quot;:1,&quot;pem.Voyager - Homepage.feed-follow-recommendations-module.totalCallCount&quot;:1}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">sensorCollect/?action=reportMetrics</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-restLi-protocol-version" elementType="Header">
                  <stringProp name="Header.name">x-restLi-protocol-version</stringProp>
                  <stringProp name="Header.value">2.0.0</stringProp>
                </elementProp>
                <elementProp name="x-li-lang" elementType="Header">
                  <stringProp name="Header.name">x-li-lang</stringProp>
                  <stringProp name="Header.value">en_US</stringProp>
                </elementProp>
                <elementProp name="Allow" elementType="Header">
                  <stringProp name="Header.name">Allow</stringProp>
                  <stringProp name="Header.value">POST</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="csrf-token" elementType="Header">
                  <stringProp name="Header.name">csrf-token</stringProp>
                  <stringProp name="Header.value">ajax:7989996966019083188</stringProp>
                </elementProp>
                <elementProp name="x-li-track" elementType="Header">
                  <stringProp name="Header.name">x-li-track</stringProp>
                  <stringProp name="Header.value">{&quot;clientVersion&quot;:&quot;&quot;,&quot;mpVersion&quot;:&quot;&quot;,&quot;osName&quot;:&quot;web&quot;,&quot;timezoneOffset&quot;:2,&quot;timezone&quot;:&quot;Africa/Cairo&quot;,&quot;mpName&quot;:&quot;voyager-web&quot;,&quot;displayDensity&quot;:1.3499999046325684,&quot;displayWidth&quot;:1727.9998779296875,&quot;displayHeight&quot;:971.9999313354492}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.linkedin.com/voyager/api/feed/hovercard/urn%3Ali%3Afs_miniCompany%3A18045372" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">voyager/api/feed/hovercard/urn%3Ali%3Afs_miniCompany%3A18045372</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-restli-protocol-version" elementType="Header">
                  <stringProp name="Header.name">x-restli-protocol-version</stringProp>
                  <stringProp name="Header.value">2.0.0</stringProp>
                </elementProp>
                <elementProp name="x-li-lang" elementType="Header">
                  <stringProp name="Header.name">x-li-lang</stringProp>
                  <stringProp name="Header.value">en_US</stringProp>
                </elementProp>
                <elementProp name="x-li-page-instance" elementType="Header">
                  <stringProp name="Header.name">x-li-page-instance</stringProp>
                  <stringProp name="Header.value">urn:li:page:d_flagship3_feed;rmy+vms+QciTXBPa0W8YMA==</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">application/vnd.linkedin.normalized+json+2.1</stringProp>
                </elementProp>
                <elementProp name="csrf-token" elementType="Header">
                  <stringProp name="Header.name">csrf-token</stringProp>
                  <stringProp name="Header.value">ajax:7989996966019083188</stringProp>
                </elementProp>
                <elementProp name="x-li-track" elementType="Header">
                  <stringProp name="Header.name">x-li-track</stringProp>
                  <stringProp name="Header.value">{&quot;clientVersion&quot;:&quot;1.10.4115&quot;,&quot;mpVersion&quot;:&quot;1.10.4115&quot;,&quot;osName&quot;:&quot;web&quot;,&quot;timezoneOffset&quot;:2,&quot;timezone&quot;:&quot;Africa/Cairo&quot;,&quot;deviceFormFactor&quot;:&quot;DESKTOP&quot;,&quot;mpName&quot;:&quot;voyager-web&quot;,&quot;displayDensity&quot;:1.3499999046325684,&quot;displayWidth&quot;:1727.9998779296875,&quot;displayHeight&quot;:971.9999313354492}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.linkedin.com/sensorCollect/?action=reportMetrics" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;metrics&quot;:[{&quot;groupName&quot;:&quot;feed&quot;,&quot;counterMetrics&quot;:{&quot;nav-communications-tab-badges-request-success&quot;:2,&quot;nav-badge-update-received-event&quot;:1,&quot;pages-admin-request-success&quot;:1,&quot;package-recommendations-request-success&quot;:1,&quot;closed-sharebox-data-request-success&quot;:1,&quot;identity-module-request-success&quot;:1,&quot;storyline-topics-request-success&quot;:1,&quot;follow-recommendations-request-success&quot;:1,&quot;initial-update-request&quot;:1,&quot;subsequent-pagination-request&quot;:1}},{&quot;groupName&quot;:&quot;premium&quot;,&quot;counterMetrics&quot;:{&quot;identity-module-upsell-request-success-count&quot;:1,&quot;upsell-request-success-count&quot;:1}},{&quot;groupName&quot;:&quot;messaging&quot;,&quot;counterMetrics&quot;:{&quot;realtime-connection-reestablished&quot;:1,&quot;conversation-list-sync-success&quot;:1}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">sensorCollect/?action=reportMetrics</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-restLi-protocol-version" elementType="Header">
                  <stringProp name="Header.name">x-restLi-protocol-version</stringProp>
                  <stringProp name="Header.value">2.0.0</stringProp>
                </elementProp>
                <elementProp name="x-li-lang" elementType="Header">
                  <stringProp name="Header.name">x-li-lang</stringProp>
                  <stringProp name="Header.value">en_US</stringProp>
                </elementProp>
                <elementProp name="Allow" elementType="Header">
                  <stringProp name="Header.name">Allow</stringProp>
                  <stringProp name="Header.value">POST</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="csrf-token" elementType="Header">
                  <stringProp name="Header.name">csrf-token</stringProp>
                  <stringProp name="Header.value">ajax:7989996966019083188</stringProp>
                </elementProp>
                <elementProp name="x-li-track" elementType="Header">
                  <stringProp name="Header.name">x-li-track</stringProp>
                  <stringProp name="Header.value">{&quot;clientVersion&quot;:&quot;&quot;,&quot;mpVersion&quot;:&quot;&quot;,&quot;osName&quot;:&quot;web&quot;,&quot;timezoneOffset&quot;:2,&quot;timezone&quot;:&quot;Africa/Cairo&quot;,&quot;mpName&quot;:&quot;voyager-web&quot;,&quot;displayDensity&quot;:1.3499999046325684,&quot;displayWidth&quot;:1727.9998779296875,&quot;displayHeight&quot;:971.9999313354492}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.linkedin.com/voyager/api/voyagerContentcreationDashSharebox?decorationId=com.linkedin.voyager.dash.deco.contentcreation.sharebox-16" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="decorationId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">decorationId</stringProp>
                  <stringProp name="Argument.value">com.linkedin.voyager.dash.deco.contentcreation.sharebox-16</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">voyager/api/voyagerContentcreationDashSharebox</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-restli-protocol-version" elementType="Header">
                  <stringProp name="Header.name">x-restli-protocol-version</stringProp>
                  <stringProp name="Header.value">2.0.0</stringProp>
                </elementProp>
                <elementProp name="x-li-lang" elementType="Header">
                  <stringProp name="Header.name">x-li-lang</stringProp>
                  <stringProp name="Header.value">en_US</stringProp>
                </elementProp>
                <elementProp name="x-li-page-instance" elementType="Header">
                  <stringProp name="Header.name">x-li-page-instance</stringProp>
                  <stringProp name="Header.value">urn:li:page:d_flagship3_feed;rmy+vms+QciTXBPa0W8YMA==</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">application/vnd.linkedin.normalized+json+2.1</stringProp>
                </elementProp>
                <elementProp name="x-li-deco-include-micro-schema" elementType="Header">
                  <stringProp name="Header.name">x-li-deco-include-micro-schema</stringProp>
                  <stringProp name="Header.value">true</stringProp>
                </elementProp>
                <elementProp name="csrf-token" elementType="Header">
                  <stringProp name="Header.name">csrf-token</stringProp>
                  <stringProp name="Header.value">ajax:7989996966019083188</stringProp>
                </elementProp>
                <elementProp name="x-li-track" elementType="Header">
                  <stringProp name="Header.name">x-li-track</stringProp>
                  <stringProp name="Header.value">{&quot;clientVersion&quot;:&quot;1.10.4115&quot;,&quot;mpVersion&quot;:&quot;1.10.4115&quot;,&quot;osName&quot;:&quot;web&quot;,&quot;timezoneOffset&quot;:2,&quot;timezone&quot;:&quot;Africa/Cairo&quot;,&quot;deviceFormFactor&quot;:&quot;DESKTOP&quot;,&quot;mpName&quot;:&quot;voyager-web&quot;,&quot;displayDensity&quot;:1.3499999046325684,&quot;displayWidth&quot;:1727.9998779296875,&quot;displayHeight&quot;:971.9999313354492}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.linkedin.com/voyager/api/voyagerOrganizationDashCompanies?decorationId=com.linkedin.voyager.dash.deco.organization.AdminWidget-11&amp;count=100&amp;q=viewerPermissions&amp;viewerPermissions=(canCreateOrganicShare:true)" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="q" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">q</stringProp>
                  <stringProp name="Argument.value">viewerPermissions</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="viewerPermissions" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">viewerPermissions</stringProp>
                  <stringProp name="Argument.value">(canCreateOrganicShare:true)</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="count" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">count</stringProp>
                  <stringProp name="Argument.value">100</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="decorationId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">decorationId</stringProp>
                  <stringProp name="Argument.value">com.linkedin.voyager.dash.deco.organization.AdminWidget-11</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">voyager/api/voyagerOrganizationDashCompanies</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-restli-protocol-version" elementType="Header">
                  <stringProp name="Header.name">x-restli-protocol-version</stringProp>
                  <stringProp name="Header.value">2.0.0</stringProp>
                </elementProp>
                <elementProp name="x-li-lang" elementType="Header">
                  <stringProp name="Header.name">x-li-lang</stringProp>
                  <stringProp name="Header.value">en_US</stringProp>
                </elementProp>
                <elementProp name="x-li-page-instance" elementType="Header">
                  <stringProp name="Header.name">x-li-page-instance</stringProp>
                  <stringProp name="Header.value">urn:li:page:d_flagship3_feed;rmy+vms+QciTXBPa0W8YMA==</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">application/vnd.linkedin.normalized+json+2.1</stringProp>
                </elementProp>
                <elementProp name="csrf-token" elementType="Header">
                  <stringProp name="Header.name">csrf-token</stringProp>
                  <stringProp name="Header.value">ajax:7989996966019083188</stringProp>
                </elementProp>
                <elementProp name="x-li-track" elementType="Header">
                  <stringProp name="Header.name">x-li-track</stringProp>
                  <stringProp name="Header.value">{&quot;clientVersion&quot;:&quot;1.10.4115&quot;,&quot;mpVersion&quot;:&quot;1.10.4115&quot;,&quot;osName&quot;:&quot;web&quot;,&quot;timezoneOffset&quot;:2,&quot;timezone&quot;:&quot;Africa/Cairo&quot;,&quot;deviceFormFactor&quot;:&quot;DESKTOP&quot;,&quot;mpName&quot;:&quot;voyager-web&quot;,&quot;displayDensity&quot;:1.3499999046325684,&quot;displayWidth&quot;:1727.9998779296875,&quot;displayHeight&quot;:971.9999313354492}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.linkedin.com/voyager/api/voyagerContentcreationDashGuiderPrompts?decorationId=com.linkedin.voyager.dash.deco.contentcreation.GuiderPrompt-6&amp;hasAttachment=false&amp;q=highestPriorityTriggeredPrompt&amp;shareBoxSessionId=P%11%C3%A6u%C3%BE%C3%B1G%C2%B3%C2%A2%C3%94%C2%9Aw%C3%A3%C2%8C0%2B" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="q" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">q</stringProp>
                  <stringProp name="Argument.value">highestPriorityTriggeredPrompt</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="hasAttachment" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">hasAttachment</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="decorationId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">decorationId</stringProp>
                  <stringProp name="Argument.value">com.linkedin.voyager.dash.deco.contentcreation.GuiderPrompt-6</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="shareBoxSessionId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">shareBoxSessionId</stringProp>
                  <stringProp name="Argument.value">P&#x11;æuþñG³¢Ô&#x9a;wã&#x8c;0+</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">voyager/api/voyagerContentcreationDashGuiderPrompts</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-restli-protocol-version" elementType="Header">
                  <stringProp name="Header.name">x-restli-protocol-version</stringProp>
                  <stringProp name="Header.value">2.0.0</stringProp>
                </elementProp>
                <elementProp name="x-li-lang" elementType="Header">
                  <stringProp name="Header.name">x-li-lang</stringProp>
                  <stringProp name="Header.value">en_US</stringProp>
                </elementProp>
                <elementProp name="x-li-page-instance" elementType="Header">
                  <stringProp name="Header.name">x-li-page-instance</stringProp>
                  <stringProp name="Header.value">urn:li:page:d_flagship3_feed;rmy+vms+QciTXBPa0W8YMA==</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">application/vnd.linkedin.normalized+json+2.1</stringProp>
                </elementProp>
                <elementProp name="x-li-deco-include-micro-schema" elementType="Header">
                  <stringProp name="Header.name">x-li-deco-include-micro-schema</stringProp>
                  <stringProp name="Header.value">true</stringProp>
                </elementProp>
                <elementProp name="csrf-token" elementType="Header">
                  <stringProp name="Header.name">csrf-token</stringProp>
                  <stringProp name="Header.value">ajax:7989996966019083188</stringProp>
                </elementProp>
                <elementProp name="x-li-track" elementType="Header">
                  <stringProp name="Header.name">x-li-track</stringProp>
                  <stringProp name="Header.value">{&quot;clientVersion&quot;:&quot;1.10.4115&quot;,&quot;mpVersion&quot;:&quot;1.10.4115&quot;,&quot;osName&quot;:&quot;web&quot;,&quot;timezoneOffset&quot;:2,&quot;timezone&quot;:&quot;Africa/Cairo&quot;,&quot;deviceFormFactor&quot;:&quot;DESKTOP&quot;,&quot;mpName&quot;:&quot;voyager-web&quot;,&quot;displayDensity&quot;:1.3499999046325684,&quot;displayWidth&quot;:1727.9998779296875,&quot;displayHeight&quot;:971.9999313354492}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.linkedin.com/voyager/api/growth/pageContent/feed_share?slotId=be_kind_prompt" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="slotId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">slotId</stringProp>
                  <stringProp name="Argument.value">be_kind_prompt</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">voyager/api/growth/pageContent/feed_share</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-restli-protocol-version" elementType="Header">
                  <stringProp name="Header.name">x-restli-protocol-version</stringProp>
                  <stringProp name="Header.value">2.0.0</stringProp>
                </elementProp>
                <elementProp name="x-li-lang" elementType="Header">
                  <stringProp name="Header.name">x-li-lang</stringProp>
                  <stringProp name="Header.value">en_US</stringProp>
                </elementProp>
                <elementProp name="x-li-page-instance" elementType="Header">
                  <stringProp name="Header.name">x-li-page-instance</stringProp>
                  <stringProp name="Header.value">urn:li:page:d_flagship3_feed;rmy+vms+QciTXBPa0W8YMA==</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">application/vnd.linkedin.normalized+json+2.1</stringProp>
                </elementProp>
                <elementProp name="csrf-token" elementType="Header">
                  <stringProp name="Header.name">csrf-token</stringProp>
                  <stringProp name="Header.value">ajax:7989996966019083188</stringProp>
                </elementProp>
                <elementProp name="x-li-track" elementType="Header">
                  <stringProp name="Header.name">x-li-track</stringProp>
                  <stringProp name="Header.value">{&quot;clientVersion&quot;:&quot;1.10.4115&quot;,&quot;mpVersion&quot;:&quot;1.10.4115&quot;,&quot;osName&quot;:&quot;web&quot;,&quot;timezoneOffset&quot;:2,&quot;timezone&quot;:&quot;Africa/Cairo&quot;,&quot;deviceFormFactor&quot;:&quot;DESKTOP&quot;,&quot;mpName&quot;:&quot;voyager-web&quot;,&quot;displayDensity&quot;:1.3499999046325684,&quot;displayWidth&quot;:1727.9998779296875,&quot;displayHeight&quot;:971.9999313354492}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.linkedin.com/voyager/api/growth/pageContent/feed_share?slotId=comment_restriction_tooltip" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="slotId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">slotId</stringProp>
                  <stringProp name="Argument.value">comment_restriction_tooltip</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">voyager/api/growth/pageContent/feed_share</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-restli-protocol-version" elementType="Header">
                  <stringProp name="Header.name">x-restli-protocol-version</stringProp>
                  <stringProp name="Header.value">2.0.0</stringProp>
                </elementProp>
                <elementProp name="x-li-lang" elementType="Header">
                  <stringProp name="Header.name">x-li-lang</stringProp>
                  <stringProp name="Header.value">en_US</stringProp>
                </elementProp>
                <elementProp name="x-li-page-instance" elementType="Header">
                  <stringProp name="Header.name">x-li-page-instance</stringProp>
                  <stringProp name="Header.value">urn:li:page:d_flagship3_feed;rmy+vms+QciTXBPa0W8YMA==</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">application/vnd.linkedin.normalized+json+2.1</stringProp>
                </elementProp>
                <elementProp name="csrf-token" elementType="Header">
                  <stringProp name="Header.name">csrf-token</stringProp>
                  <stringProp name="Header.value">ajax:7989996966019083188</stringProp>
                </elementProp>
                <elementProp name="x-li-track" elementType="Header">
                  <stringProp name="Header.name">x-li-track</stringProp>
                  <stringProp name="Header.value">{&quot;clientVersion&quot;:&quot;1.10.4115&quot;,&quot;mpVersion&quot;:&quot;1.10.4115&quot;,&quot;osName&quot;:&quot;web&quot;,&quot;timezoneOffset&quot;:2,&quot;timezone&quot;:&quot;Africa/Cairo&quot;,&quot;deviceFormFactor&quot;:&quot;DESKTOP&quot;,&quot;mpName&quot;:&quot;voyager-web&quot;,&quot;displayDensity&quot;:1.3499999046325684,&quot;displayWidth&quot;:1727.9998779296875,&quot;displayHeight&quot;:971.9999313354492}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.linkedin.com/voyager/api/voyagerLegoDashWidgetImpressionEvents" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;trackingToken&quot;:&quot;cjRBuCBjum5Is7dFp2oMbz0Zpn9LoRdT9zROol1Ipl9T9zRArQRIpl9T9z4Zp6lQsSlRsmlirnlK9AVfilh9kQZgfnB2sClAsAZQpmtAqnsCs6BQr6ZLt5ZKrSBQoSBOt7dBsBZQrClJrmZznQ4P9mtKqn9xq7cJpnhxs6BzqnhOon0Zp4BQpmtAqnsCc3RKrSBQqndLk7hBpShFtOoMbz0Zpn9LoRdOpOoZsC5gr6lisCsCfmhLjmNBkD9D9z0ZrCZFt6BPrR1MtmZOpOoNfmhBt7dBtn5BkCRRjD1RrT9D9D1Ft6NLrThvrCZFt6dFsDhPpn9vt6VBrmRLoPRAin1RrT9D9AVfilh9kQZgfnB2sClAsCYCt6NRompBp3RAinhKpmRDpncCs6BQr6ZLt5ZKrSBQoSBOt7dBsBZQrClJrmZzfmh9t6ZIsOpQr7lxpClAfmh9t7lLum5I9ClOomxPnShBpmoZpmRxjClDon0CsClDonBLtzRAin1MoioUdj0Qe3RAimVLqndOpnoCe3oQdj4MczsVfmh9tioMcS4NczwRd3gSejwJe3pye2Rxoj4QbjgMdzgJcjhAemgVem4Zp4BQu6lQrCZz&quot;,&quot;visibility&quot;:&quot;SHOW&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">voyager/api/voyagerLegoDashWidgetImpressionEvents</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-restli-protocol-version" elementType="Header">
                  <stringProp name="Header.name">x-restli-protocol-version</stringProp>
                  <stringProp name="Header.value">2.0.0</stringProp>
                </elementProp>
                <elementProp name="x-li-lang" elementType="Header">
                  <stringProp name="Header.name">x-li-lang</stringProp>
                  <stringProp name="Header.value">en_US</stringProp>
                </elementProp>
                <elementProp name="x-li-page-instance" elementType="Header">
                  <stringProp name="Header.name">x-li-page-instance</stringProp>
                  <stringProp name="Header.value">urn:li:page:d_flagship3_feed;rmy+vms+QciTXBPa0W8YMA==</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">application/vnd.linkedin.normalized+json+2.1</stringProp>
                </elementProp>
                <elementProp name="csrf-token" elementType="Header">
                  <stringProp name="Header.name">csrf-token</stringProp>
                  <stringProp name="Header.value">ajax:7989996966019083188</stringProp>
                </elementProp>
                <elementProp name="x-li-track" elementType="Header">
                  <stringProp name="Header.name">x-li-track</stringProp>
                  <stringProp name="Header.value">{&quot;clientVersion&quot;:&quot;1.10.4115&quot;,&quot;mpVersion&quot;:&quot;1.10.4115&quot;,&quot;osName&quot;:&quot;web&quot;,&quot;timezoneOffset&quot;:2,&quot;timezone&quot;:&quot;Africa/Cairo&quot;,&quot;deviceFormFactor&quot;:&quot;DESKTOP&quot;,&quot;mpName&quot;:&quot;voyager-web&quot;,&quot;displayDensity&quot;:1.3499999046325684,&quot;displayWidth&quot;:1727.9998779296875,&quot;displayHeight&quot;:971.9999313354492}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.linkedin.com/voyager/api/voyagerContentcreationDashGuiderPrompts?decorationId=com.linkedin.voyager.dash.deco.contentcreation.GuiderPrompt-6&amp;commentary=Welc&amp;hasAttachment=false&amp;q=highestPriorityTriggeredPrompt&amp;shareBoxSessionId=P%11%C3%A6u%C3%BE%C3%B1G%C2%B3%C2%A2%C3%94%C2%9Aw%C3%A3%C2%8C0%2B" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="q" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">q</stringProp>
                  <stringProp name="Argument.value">highestPriorityTriggeredPrompt</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="hasAttachment" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">hasAttachment</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="decorationId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">decorationId</stringProp>
                  <stringProp name="Argument.value">com.linkedin.voyager.dash.deco.contentcreation.GuiderPrompt-6</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="shareBoxSessionId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">shareBoxSessionId</stringProp>
                  <stringProp name="Argument.value">P&#x11;æuþñG³¢Ô&#x9a;wã&#x8c;0+</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="commentary" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">commentary</stringProp>
                  <stringProp name="Argument.value">Welc</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">voyager/api/voyagerContentcreationDashGuiderPrompts</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-restli-protocol-version" elementType="Header">
                  <stringProp name="Header.name">x-restli-protocol-version</stringProp>
                  <stringProp name="Header.value">2.0.0</stringProp>
                </elementProp>
                <elementProp name="x-li-lang" elementType="Header">
                  <stringProp name="Header.name">x-li-lang</stringProp>
                  <stringProp name="Header.value">en_US</stringProp>
                </elementProp>
                <elementProp name="x-li-page-instance" elementType="Header">
                  <stringProp name="Header.name">x-li-page-instance</stringProp>
                  <stringProp name="Header.value">urn:li:page:d_flagship3_feed;rmy+vms+QciTXBPa0W8YMA==</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">application/vnd.linkedin.normalized+json+2.1</stringProp>
                </elementProp>
                <elementProp name="csrf-token" elementType="Header">
                  <stringProp name="Header.name">csrf-token</stringProp>
                  <stringProp name="Header.value">ajax:7989996966019083188</stringProp>
                </elementProp>
                <elementProp name="x-li-track" elementType="Header">
                  <stringProp name="Header.name">x-li-track</stringProp>
                  <stringProp name="Header.value">{&quot;clientVersion&quot;:&quot;1.10.4115&quot;,&quot;mpVersion&quot;:&quot;1.10.4115&quot;,&quot;osName&quot;:&quot;web&quot;,&quot;timezoneOffset&quot;:2,&quot;timezone&quot;:&quot;Africa/Cairo&quot;,&quot;deviceFormFactor&quot;:&quot;DESKTOP&quot;,&quot;mpName&quot;:&quot;voyager-web&quot;,&quot;displayDensity&quot;:1.3499999046325684,&quot;displayWidth&quot;:1727.9998779296875,&quot;displayHeight&quot;:971.9999313354492}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.linkedin.com/voyager/api/voyagerContentcreationDashGuiderPrompts?decorationId=com.linkedin.voyager.dash.deco.contentcreation.GuiderPrompt-6&amp;commentary=Welcome&amp;hasAttachment=false&amp;q=highestPriorityTriggeredPrompt&amp;shareBoxSessionId=P%11%C3%A6u%C3%BE%C3%B1G%C2%B3%C2%A2%C3%94%C2%9Aw%C3%A3%C2%8C0%2B" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="q" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">q</stringProp>
                  <stringProp name="Argument.value">highestPriorityTriggeredPrompt</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="hasAttachment" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">hasAttachment</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="decorationId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">decorationId</stringProp>
                  <stringProp name="Argument.value">com.linkedin.voyager.dash.deco.contentcreation.GuiderPrompt-6</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="shareBoxSessionId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">shareBoxSessionId</stringProp>
                  <stringProp name="Argument.value">P&#x11;æuþñG³¢Ô&#x9a;wã&#x8c;0+</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="commentary" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">commentary</stringProp>
                  <stringProp name="Argument.value">Welcome</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">voyager/api/voyagerContentcreationDashGuiderPrompts</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-restli-protocol-version" elementType="Header">
                  <stringProp name="Header.name">x-restli-protocol-version</stringProp>
                  <stringProp name="Header.value">2.0.0</stringProp>
                </elementProp>
                <elementProp name="x-li-lang" elementType="Header">
                  <stringProp name="Header.name">x-li-lang</stringProp>
                  <stringProp name="Header.value">en_US</stringProp>
                </elementProp>
                <elementProp name="x-li-page-instance" elementType="Header">
                  <stringProp name="Header.name">x-li-page-instance</stringProp>
                  <stringProp name="Header.value">urn:li:page:d_flagship3_feed;rmy+vms+QciTXBPa0W8YMA==</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">application/vnd.linkedin.normalized+json+2.1</stringProp>
                </elementProp>
                <elementProp name="csrf-token" elementType="Header">
                  <stringProp name="Header.name">csrf-token</stringProp>
                  <stringProp name="Header.value">ajax:7989996966019083188</stringProp>
                </elementProp>
                <elementProp name="x-li-track" elementType="Header">
                  <stringProp name="Header.name">x-li-track</stringProp>
                  <stringProp name="Header.value">{&quot;clientVersion&quot;:&quot;1.10.4115&quot;,&quot;mpVersion&quot;:&quot;1.10.4115&quot;,&quot;osName&quot;:&quot;web&quot;,&quot;timezoneOffset&quot;:2,&quot;timezone&quot;:&quot;Africa/Cairo&quot;,&quot;deviceFormFactor&quot;:&quot;DESKTOP&quot;,&quot;mpName&quot;:&quot;voyager-web&quot;,&quot;displayDensity&quot;:1.3499999046325684,&quot;displayWidth&quot;:1727.9998779296875,&quot;displayHeight&quot;:971.9999313354492}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.linkedin.com/voyager/api/voyagerContentcreationDashGuiderPrompts?decorationId=com.linkedin.voyager.dash.deco.contentcreation.GuiderPrompt-6&amp;commentary=%27%27&amp;hasAttachment=false&amp;q=highestPriorityTriggeredPrompt&amp;shareBoxSessionId=P%11%C3%A6u%C3%BE%C3%B1G%C2%B3%C2%A2%C3%94%C2%9Aw%C3%A3%C2%8C0%2B" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="q" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">q</stringProp>
                  <stringProp name="Argument.value">highestPriorityTriggeredPrompt</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="hasAttachment" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">hasAttachment</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="decorationId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">decorationId</stringProp>
                  <stringProp name="Argument.value">com.linkedin.voyager.dash.deco.contentcreation.GuiderPrompt-6</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="shareBoxSessionId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">shareBoxSessionId</stringProp>
                  <stringProp name="Argument.value">P&#x11;æuþñG³¢Ô&#x9a;wã&#x8c;0+</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="commentary" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">commentary</stringProp>
                  <stringProp name="Argument.value">&apos;&apos;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">voyager/api/voyagerContentcreationDashGuiderPrompts</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-restli-protocol-version" elementType="Header">
                  <stringProp name="Header.name">x-restli-protocol-version</stringProp>
                  <stringProp name="Header.value">2.0.0</stringProp>
                </elementProp>
                <elementProp name="x-li-lang" elementType="Header">
                  <stringProp name="Header.name">x-li-lang</stringProp>
                  <stringProp name="Header.value">en_US</stringProp>
                </elementProp>
                <elementProp name="x-li-page-instance" elementType="Header">
                  <stringProp name="Header.name">x-li-page-instance</stringProp>
                  <stringProp name="Header.value">urn:li:page:d_flagship3_feed;rmy+vms+QciTXBPa0W8YMA==</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">application/vnd.linkedin.normalized+json+2.1</stringProp>
                </elementProp>
                <elementProp name="csrf-token" elementType="Header">
                  <stringProp name="Header.name">csrf-token</stringProp>
                  <stringProp name="Header.value">ajax:7989996966019083188</stringProp>
                </elementProp>
                <elementProp name="x-li-track" elementType="Header">
                  <stringProp name="Header.name">x-li-track</stringProp>
                  <stringProp name="Header.value">{&quot;clientVersion&quot;:&quot;1.10.4115&quot;,&quot;mpVersion&quot;:&quot;1.10.4115&quot;,&quot;osName&quot;:&quot;web&quot;,&quot;timezoneOffset&quot;:2,&quot;timezone&quot;:&quot;Africa/Cairo&quot;,&quot;deviceFormFactor&quot;:&quot;DESKTOP&quot;,&quot;mpName&quot;:&quot;voyager-web&quot;,&quot;displayDensity&quot;:1.3499999046325684,&quot;displayWidth&quot;:1727.9998779296875,&quot;displayHeight&quot;:971.9999313354492}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.linkedin.com/voyager/api/voyagerContentcreationDashGuiderPrompts?decorationId=com.linkedin.voyager.dash.deco.contentcreation.GuiderPrompt-6&amp;commentary=Hi%20S&amp;hasAttachment=false&amp;q=highestPriorityTriggeredPrompt&amp;shareBoxSessionId=P%11%C3%A6u%C3%BE%C3%B1G%C2%B3%C2%A2%C3%94%C2%9Aw%C3%A3%C2%8C0%2B" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="q" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">q</stringProp>
                  <stringProp name="Argument.value">highestPriorityTriggeredPrompt</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="hasAttachment" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">hasAttachment</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="decorationId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">decorationId</stringProp>
                  <stringProp name="Argument.value">com.linkedin.voyager.dash.deco.contentcreation.GuiderPrompt-6</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="shareBoxSessionId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">shareBoxSessionId</stringProp>
                  <stringProp name="Argument.value">P&#x11;æuþñG³¢Ô&#x9a;wã&#x8c;0+</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="commentary" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">commentary</stringProp>
                  <stringProp name="Argument.value">Hi S</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">voyager/api/voyagerContentcreationDashGuiderPrompts</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-restli-protocol-version" elementType="Header">
                  <stringProp name="Header.name">x-restli-protocol-version</stringProp>
                  <stringProp name="Header.value">2.0.0</stringProp>
                </elementProp>
                <elementProp name="x-li-lang" elementType="Header">
                  <stringProp name="Header.name">x-li-lang</stringProp>
                  <stringProp name="Header.value">en_US</stringProp>
                </elementProp>
                <elementProp name="x-li-page-instance" elementType="Header">
                  <stringProp name="Header.name">x-li-page-instance</stringProp>
                  <stringProp name="Header.value">urn:li:page:d_flagship3_feed;rmy+vms+QciTXBPa0W8YMA==</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">application/vnd.linkedin.normalized+json+2.1</stringProp>
                </elementProp>
                <elementProp name="csrf-token" elementType="Header">
                  <stringProp name="Header.name">csrf-token</stringProp>
                  <stringProp name="Header.value">ajax:7989996966019083188</stringProp>
                </elementProp>
                <elementProp name="x-li-track" elementType="Header">
                  <stringProp name="Header.name">x-li-track</stringProp>
                  <stringProp name="Header.value">{&quot;clientVersion&quot;:&quot;1.10.4115&quot;,&quot;mpVersion&quot;:&quot;1.10.4115&quot;,&quot;osName&quot;:&quot;web&quot;,&quot;timezoneOffset&quot;:2,&quot;timezone&quot;:&quot;Africa/Cairo&quot;,&quot;deviceFormFactor&quot;:&quot;DESKTOP&quot;,&quot;mpName&quot;:&quot;voyager-web&quot;,&quot;displayDensity&quot;:1.3499999046325684,&quot;displayWidth&quot;:1727.9998779296875,&quot;displayHeight&quot;:971.9999313354492}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.linkedin.com/voyager/api/voyagerContentcreationDashGuiderPrompts?decorationId=com.linkedin.voyager.dash.deco.contentcreation.GuiderPrompt-6&amp;commentary=Hi%20Shady%20%2C%20I%27m&amp;hasAttachment=false&amp;q=highestPriorityTriggeredPrompt&amp;shareBoxSessionId=P%11%C3%A6u%C3%BE%C3%B1G%C2%B3%C2%A2%C3%94%C2%9Aw%C3%A3%C2%8C0%2B" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="q" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">q</stringProp>
                  <stringProp name="Argument.value">highestPriorityTriggeredPrompt</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="hasAttachment" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">hasAttachment</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="decorationId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">decorationId</stringProp>
                  <stringProp name="Argument.value">com.linkedin.voyager.dash.deco.contentcreation.GuiderPrompt-6</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="shareBoxSessionId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">shareBoxSessionId</stringProp>
                  <stringProp name="Argument.value">P&#x11;æuþñG³¢Ô&#x9a;wã&#x8c;0+</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="commentary" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">commentary</stringProp>
                  <stringProp name="Argument.value">Hi Shady , I&apos;m</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">voyager/api/voyagerContentcreationDashGuiderPrompts</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-restli-protocol-version" elementType="Header">
                  <stringProp name="Header.name">x-restli-protocol-version</stringProp>
                  <stringProp name="Header.value">2.0.0</stringProp>
                </elementProp>
                <elementProp name="x-li-lang" elementType="Header">
                  <stringProp name="Header.name">x-li-lang</stringProp>
                  <stringProp name="Header.value">en_US</stringProp>
                </elementProp>
                <elementProp name="x-li-page-instance" elementType="Header">
                  <stringProp name="Header.name">x-li-page-instance</stringProp>
                  <stringProp name="Header.value">urn:li:page:d_flagship3_feed;rmy+vms+QciTXBPa0W8YMA==</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">application/vnd.linkedin.normalized+json+2.1</stringProp>
                </elementProp>
                <elementProp name="csrf-token" elementType="Header">
                  <stringProp name="Header.name">csrf-token</stringProp>
                  <stringProp name="Header.value">ajax:7989996966019083188</stringProp>
                </elementProp>
                <elementProp name="x-li-track" elementType="Header">
                  <stringProp name="Header.name">x-li-track</stringProp>
                  <stringProp name="Header.value">{&quot;clientVersion&quot;:&quot;1.10.4115&quot;,&quot;mpVersion&quot;:&quot;1.10.4115&quot;,&quot;osName&quot;:&quot;web&quot;,&quot;timezoneOffset&quot;:2,&quot;timezone&quot;:&quot;Africa/Cairo&quot;,&quot;deviceFormFactor&quot;:&quot;DESKTOP&quot;,&quot;mpName&quot;:&quot;voyager-web&quot;,&quot;displayDensity&quot;:1.3499999046325684,&quot;displayWidth&quot;:1727.9998779296875,&quot;displayHeight&quot;:971.9999313354492}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.linkedin.com/voyager/api/voyagerContentcreationDashGuiderPrompts?decorationId=com.linkedin.voyager.dash.deco.contentcreation.GuiderPrompt-6&amp;commentary=Hi%20Shady%20%2C%20I%27m%20from%20J&amp;hasAttachment=false&amp;q=highestPriorityTriggeredPrompt&amp;shareBoxSessionId=P%11%C3%A6u%C3%BE%C3%B1G%C2%B3%C2%A2%C3%94%C2%9Aw%C3%A3%C2%8C0%2B" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="q" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">q</stringProp>
                  <stringProp name="Argument.value">highestPriorityTriggeredPrompt</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="hasAttachment" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">hasAttachment</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="decorationId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">decorationId</stringProp>
                  <stringProp name="Argument.value">com.linkedin.voyager.dash.deco.contentcreation.GuiderPrompt-6</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="shareBoxSessionId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">shareBoxSessionId</stringProp>
                  <stringProp name="Argument.value">P&#x11;æuþñG³¢Ô&#x9a;wã&#x8c;0+</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="commentary" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">commentary</stringProp>
                  <stringProp name="Argument.value">Hi Shady , I&apos;m from J</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">voyager/api/voyagerContentcreationDashGuiderPrompts</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-restli-protocol-version" elementType="Header">
                  <stringProp name="Header.name">x-restli-protocol-version</stringProp>
                  <stringProp name="Header.value">2.0.0</stringProp>
                </elementProp>
                <elementProp name="x-li-lang" elementType="Header">
                  <stringProp name="Header.name">x-li-lang</stringProp>
                  <stringProp name="Header.value">en_US</stringProp>
                </elementProp>
                <elementProp name="x-li-page-instance" elementType="Header">
                  <stringProp name="Header.name">x-li-page-instance</stringProp>
                  <stringProp name="Header.value">urn:li:page:d_flagship3_feed;rmy+vms+QciTXBPa0W8YMA==</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">application/vnd.linkedin.normalized+json+2.1</stringProp>
                </elementProp>
                <elementProp name="csrf-token" elementType="Header">
                  <stringProp name="Header.name">csrf-token</stringProp>
                  <stringProp name="Header.value">ajax:7989996966019083188</stringProp>
                </elementProp>
                <elementProp name="x-li-track" elementType="Header">
                  <stringProp name="Header.name">x-li-track</stringProp>
                  <stringProp name="Header.value">{&quot;clientVersion&quot;:&quot;1.10.4115&quot;,&quot;mpVersion&quot;:&quot;1.10.4115&quot;,&quot;osName&quot;:&quot;web&quot;,&quot;timezoneOffset&quot;:2,&quot;timezone&quot;:&quot;Africa/Cairo&quot;,&quot;deviceFormFactor&quot;:&quot;DESKTOP&quot;,&quot;mpName&quot;:&quot;voyager-web&quot;,&quot;displayDensity&quot;:1.3499999046325684,&quot;displayWidth&quot;:1727.9998779296875,&quot;displayHeight&quot;:971.9999313354492}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.linkedin.com/voyager/api/voyagerContentcreationDashGuiderPrompts?decorationId=com.linkedin.voyager.dash.deco.contentcreation.GuiderPrompt-6&amp;commentary=Hi%20Shady%20%2C%20I%27m%20from%20JMe&amp;hasAttachment=false&amp;q=highestPriorityTriggeredPrompt&amp;shareBoxSessionId=P%11%C3%A6u%C3%BE%C3%B1G%C2%B3%C2%A2%C3%94%C2%9Aw%C3%A3%C2%8C0%2B" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="q" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">q</stringProp>
                  <stringProp name="Argument.value">highestPriorityTriggeredPrompt</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="hasAttachment" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">hasAttachment</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="decorationId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">decorationId</stringProp>
                  <stringProp name="Argument.value">com.linkedin.voyager.dash.deco.contentcreation.GuiderPrompt-6</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="shareBoxSessionId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">shareBoxSessionId</stringProp>
                  <stringProp name="Argument.value">P&#x11;æuþñG³¢Ô&#x9a;wã&#x8c;0+</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="commentary" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">commentary</stringProp>
                  <stringProp name="Argument.value">Hi Shady , I&apos;m from JMe</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">voyager/api/voyagerContentcreationDashGuiderPrompts</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-restli-protocol-version" elementType="Header">
                  <stringProp name="Header.name">x-restli-protocol-version</stringProp>
                  <stringProp name="Header.value">2.0.0</stringProp>
                </elementProp>
                <elementProp name="x-li-lang" elementType="Header">
                  <stringProp name="Header.name">x-li-lang</stringProp>
                  <stringProp name="Header.value">en_US</stringProp>
                </elementProp>
                <elementProp name="x-li-page-instance" elementType="Header">
                  <stringProp name="Header.name">x-li-page-instance</stringProp>
                  <stringProp name="Header.value">urn:li:page:d_flagship3_feed;rmy+vms+QciTXBPa0W8YMA==</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">application/vnd.linkedin.normalized+json+2.1</stringProp>
                </elementProp>
                <elementProp name="csrf-token" elementType="Header">
                  <stringProp name="Header.name">csrf-token</stringProp>
                  <stringProp name="Header.value">ajax:7989996966019083188</stringProp>
                </elementProp>
                <elementProp name="x-li-track" elementType="Header">
                  <stringProp name="Header.name">x-li-track</stringProp>
                  <stringProp name="Header.value">{&quot;clientVersion&quot;:&quot;1.10.4115&quot;,&quot;mpVersion&quot;:&quot;1.10.4115&quot;,&quot;osName&quot;:&quot;web&quot;,&quot;timezoneOffset&quot;:2,&quot;timezone&quot;:&quot;Africa/Cairo&quot;,&quot;deviceFormFactor&quot;:&quot;DESKTOP&quot;,&quot;mpName&quot;:&quot;voyager-web&quot;,&quot;displayDensity&quot;:1.3499999046325684,&quot;displayWidth&quot;:1727.9998779296875,&quot;displayHeight&quot;:971.9999313354492}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.linkedin.com/voyager/api/voyagerContentcreationDashGuiderPrompts?decorationId=com.linkedin.voyager.dash.deco.contentcreation.GuiderPrompt-6&amp;commentary=Hi%20Shady%20%2C%20I%27m%20from%20JMeter&amp;hasAttachment=false&amp;q=highestPriorityTriggeredPrompt&amp;shareBoxSessionId=P%11%C3%A6u%C3%BE%C3%B1G%C2%B3%C2%A2%C3%94%C2%9Aw%C3%A3%C2%8C0%2B" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="q" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">q</stringProp>
                  <stringProp name="Argument.value">highestPriorityTriggeredPrompt</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="hasAttachment" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">hasAttachment</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="decorationId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">decorationId</stringProp>
                  <stringProp name="Argument.value">com.linkedin.voyager.dash.deco.contentcreation.GuiderPrompt-6</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="shareBoxSessionId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">shareBoxSessionId</stringProp>
                  <stringProp name="Argument.value">P&#x11;æuþñG³¢Ô&#x9a;wã&#x8c;0+</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="commentary" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">commentary</stringProp>
                  <stringProp name="Argument.value">Hi Shady , I&apos;m from JMeter</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">voyager/api/voyagerContentcreationDashGuiderPrompts</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-restli-protocol-version" elementType="Header">
                  <stringProp name="Header.name">x-restli-protocol-version</stringProp>
                  <stringProp name="Header.value">2.0.0</stringProp>
                </elementProp>
                <elementProp name="x-li-lang" elementType="Header">
                  <stringProp name="Header.name">x-li-lang</stringProp>
                  <stringProp name="Header.value">en_US</stringProp>
                </elementProp>
                <elementProp name="x-li-page-instance" elementType="Header">
                  <stringProp name="Header.name">x-li-page-instance</stringProp>
                  <stringProp name="Header.value">urn:li:page:d_flagship3_feed;rmy+vms+QciTXBPa0W8YMA==</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">application/vnd.linkedin.normalized+json+2.1</stringProp>
                </elementProp>
                <elementProp name="csrf-token" elementType="Header">
                  <stringProp name="Header.name">csrf-token</stringProp>
                  <stringProp name="Header.value">ajax:7989996966019083188</stringProp>
                </elementProp>
                <elementProp name="x-li-track" elementType="Header">
                  <stringProp name="Header.name">x-li-track</stringProp>
                  <stringProp name="Header.value">{&quot;clientVersion&quot;:&quot;1.10.4115&quot;,&quot;mpVersion&quot;:&quot;1.10.4115&quot;,&quot;osName&quot;:&quot;web&quot;,&quot;timezoneOffset&quot;:2,&quot;timezone&quot;:&quot;Africa/Cairo&quot;,&quot;deviceFormFactor&quot;:&quot;DESKTOP&quot;,&quot;mpName&quot;:&quot;voyager-web&quot;,&quot;displayDensity&quot;:1.3499999046325684,&quot;displayWidth&quot;:1727.9998779296875,&quot;displayHeight&quot;:971.9999313354492}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.linkedin.com/voyager/api/contentcreation/normShares" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;visibleToConnectionsOnly&quot;:false,&quot;externalAudienceProviders&quot;:[],&quot;commentaryV2&quot;:{&quot;text&quot;:&quot;Hi Shady , I&apos;m from JMeter&quot;,&quot;attributes&quot;:[]},&quot;origin&quot;:&quot;FEED&quot;,&quot;allowedCommentersScope&quot;:&quot;ALL&quot;,&quot;media&quot;:[]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">voyager/api/contentcreation/normShares</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-restli-protocol-version" elementType="Header">
                  <stringProp name="Header.name">x-restli-protocol-version</stringProp>
                  <stringProp name="Header.value">2.0.0</stringProp>
                </elementProp>
                <elementProp name="x-li-lang" elementType="Header">
                  <stringProp name="Header.name">x-li-lang</stringProp>
                  <stringProp name="Header.value">en_US</stringProp>
                </elementProp>
                <elementProp name="x-li-page-instance" elementType="Header">
                  <stringProp name="Header.name">x-li-page-instance</stringProp>
                  <stringProp name="Header.value">urn:li:page:d_flagship3_feed;rmy+vms+QciTXBPa0W8YMA==</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">application/vnd.linkedin.normalized+json+2.1</stringProp>
                </elementProp>
                <elementProp name="csrf-token" elementType="Header">
                  <stringProp name="Header.name">csrf-token</stringProp>
                  <stringProp name="Header.value">ajax:7989996966019083188</stringProp>
                </elementProp>
                <elementProp name="x-li-track" elementType="Header">
                  <stringProp name="Header.name">x-li-track</stringProp>
                  <stringProp name="Header.value">{&quot;clientVersion&quot;:&quot;1.10.4115&quot;,&quot;mpVersion&quot;:&quot;1.10.4115&quot;,&quot;osName&quot;:&quot;web&quot;,&quot;timezoneOffset&quot;:2,&quot;timezone&quot;:&quot;Africa/Cairo&quot;,&quot;deviceFormFactor&quot;:&quot;DESKTOP&quot;,&quot;mpName&quot;:&quot;voyager-web&quot;,&quot;displayDensity&quot;:1.3499999046325684,&quot;displayWidth&quot;:1727.9998779296875,&quot;displayHeight&quot;:971.9999313354492}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.linkedin.com/voyager/api/voyagerLegoDashWidgetImpressionEvents" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;trackingToken&quot;:&quot;34ZpnFFkTBxr71PqmgCc2UMfmlOrSdjtOoZsC5gr6litOoZp6Zdr6litOoNfmhBt7dBtn5BkCRRrypejQBkildfk3RVgD9Bp79ft6lDp6BT9ClIqmpLsD1vrCBvpmhLrlZOrThxpn9zfmh9t6lDp6BT9z0ZrCZFt6BPrR1QpmtAqnsCc2UMfmlOrSdjsCsCfn9xk6NBkD9D9zRArQRIpl9OpOoMfmVLqnhFsSZgs7lLsCsCcjRApnhPpnlNpl9JtkVMtmZOpOpQr7lxpClAfmh9s7lLsCsCjAZ9l4BjjR0Zuk9OpmhOrOpQr7lxpClAfmh9t6VBrmtBsOpBr6BCrT9MnSVFnSlArSRvsCZQomlOoPRAinhLr7cCt6NRompBp3RAinhRrTBxr2pPt71JrT9MnThPrT1vsClQpC5vs6BEsStxr6oZpmRxjClDon0CsClDonBLtzRAin1MoioSe3AUdPRAimVLqndOpnoCe3oQdj4MczsVfmh9tipydPATcP5xp3hBcjcJd3txoyRzczcQbjpBpjoJd3kRom8TozwZp4BQu6lQrCZz&quot;,&quot;visibility&quot;:&quot;SHOW&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">voyager/api/voyagerLegoDashWidgetImpressionEvents</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-restli-protocol-version" elementType="Header">
                  <stringProp name="Header.name">x-restli-protocol-version</stringProp>
                  <stringProp name="Header.value">2.0.0</stringProp>
                </elementProp>
                <elementProp name="x-li-lang" elementType="Header">
                  <stringProp name="Header.name">x-li-lang</stringProp>
                  <stringProp name="Header.value">en_US</stringProp>
                </elementProp>
                <elementProp name="x-li-page-instance" elementType="Header">
                  <stringProp name="Header.name">x-li-page-instance</stringProp>
                  <stringProp name="Header.value">urn:li:page:d_flagship3_feed;rmy+vms+QciTXBPa0W8YMA==</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">application/vnd.linkedin.normalized+json+2.1</stringProp>
                </elementProp>
                <elementProp name="csrf-token" elementType="Header">
                  <stringProp name="Header.name">csrf-token</stringProp>
                  <stringProp name="Header.value">ajax:7989996966019083188</stringProp>
                </elementProp>
                <elementProp name="x-li-track" elementType="Header">
                  <stringProp name="Header.name">x-li-track</stringProp>
                  <stringProp name="Header.value">{&quot;clientVersion&quot;:&quot;1.10.4115&quot;,&quot;mpVersion&quot;:&quot;1.10.4115&quot;,&quot;osName&quot;:&quot;web&quot;,&quot;timezoneOffset&quot;:2,&quot;timezone&quot;:&quot;Africa/Cairo&quot;,&quot;deviceFormFactor&quot;:&quot;DESKTOP&quot;,&quot;mpName&quot;:&quot;voyager-web&quot;,&quot;displayDensity&quot;:1.3499999046325684,&quot;displayWidth&quot;:1727.9998779296875,&quot;displayHeight&quot;:971.9999313354492}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.linkedin.com/voyager/api/voyagerLegoDashWidgetActionEvents" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;trackingToken&quot;:&quot;34ZpnFFkTBxr71PqmgCc2UMfmlOrSdjtOoZsC5gr6litOoZp6Zdr6litOoNfmhBt7dBtn5BkCRRrypejQBkildfk3RVgD9Bp79ft6lDp6BT9ClIqmpLsD1vrCBvpmhLrlZOrThxpn9zfmh9t6lDp6BT9z0ZrCZFt6BPrR1QpmtAqnsCc2UMfmlOrSdjsCsCfn9xk6NBkD9D9zRArQRIpl9OpOoMfmVLqnhFsSZgs7lLsCsCcjRApnhPpnlNpl9JtkVMtmZOpOpQr7lxpClAfmh9s7lLsCsCjAZ9l4BjjR0Zuk9OpmhOrOpQr7lxpClAfmh9t6VBrmtBsOpBr6BCrT9MnSVFnSlArSRvsCZQomlOoPRAinhLr7cCt6NRompBp3RAinhRrTBxr2pPt71JrT9MnThPrT1vsClQpC5vs6BEsStxr6oZpmRxjClDon0CsClDonBLtzRAin1MoioSe3AUdPRAimVLqndOpnoCe3oQdj4MczsVfmh9tipydPATcP5xp3hBcjcJd3txoyRzczcQbjpBpjoJd3kRom8TozwZp4BQu6lQrCZz&quot;,&quot;actionCategory&quot;:&quot;SECONDARY_ACTION&quot;,&quot;actionCount&quot;:1}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">voyager/api/voyagerLegoDashWidgetActionEvents</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-restli-protocol-version" elementType="Header">
                  <stringProp name="Header.name">x-restli-protocol-version</stringProp>
                  <stringProp name="Header.value">2.0.0</stringProp>
                </elementProp>
                <elementProp name="x-li-lang" elementType="Header">
                  <stringProp name="Header.name">x-li-lang</stringProp>
                  <stringProp name="Header.value">en_US</stringProp>
                </elementProp>
                <elementProp name="x-li-page-instance" elementType="Header">
                  <stringProp name="Header.name">x-li-page-instance</stringProp>
                  <stringProp name="Header.value">urn:li:page:d_flagship3_feed;rmy+vms+QciTXBPa0W8YMA==</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">application/vnd.linkedin.normalized+json+2.1</stringProp>
                </elementProp>
                <elementProp name="csrf-token" elementType="Header">
                  <stringProp name="Header.name">csrf-token</stringProp>
                  <stringProp name="Header.value">ajax:7989996966019083188</stringProp>
                </elementProp>
                <elementProp name="x-li-track" elementType="Header">
                  <stringProp name="Header.name">x-li-track</stringProp>
                  <stringProp name="Header.value">{&quot;clientVersion&quot;:&quot;1.10.4115&quot;,&quot;mpVersion&quot;:&quot;1.10.4115&quot;,&quot;osName&quot;:&quot;web&quot;,&quot;timezoneOffset&quot;:2,&quot;timezone&quot;:&quot;Africa/Cairo&quot;,&quot;deviceFormFactor&quot;:&quot;DESKTOP&quot;,&quot;mpName&quot;:&quot;voyager-web&quot;,&quot;displayDensity&quot;:1.3499999046325684,&quot;displayWidth&quot;:1727.9998779296875,&quot;displayHeight&quot;:971.9999313354492}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.linkedin.com/sensorCollect/?action=reportMetrics" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;metrics&quot;:[{&quot;groupName&quot;:&quot;feed&quot;,&quot;counterMetrics&quot;:{&quot;pem.Voyager - Feed - Posts.create-a-share.totalCallCount&quot;:1}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">sensorCollect/?action=reportMetrics</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-restLi-protocol-version" elementType="Header">
                  <stringProp name="Header.name">x-restLi-protocol-version</stringProp>
                  <stringProp name="Header.value">2.0.0</stringProp>
                </elementProp>
                <elementProp name="x-li-lang" elementType="Header">
                  <stringProp name="Header.name">x-li-lang</stringProp>
                  <stringProp name="Header.value">en_US</stringProp>
                </elementProp>
                <elementProp name="Allow" elementType="Header">
                  <stringProp name="Header.name">Allow</stringProp>
                  <stringProp name="Header.value">POST</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="csrf-token" elementType="Header">
                  <stringProp name="Header.name">csrf-token</stringProp>
                  <stringProp name="Header.value">ajax:7989996966019083188</stringProp>
                </elementProp>
                <elementProp name="x-li-track" elementType="Header">
                  <stringProp name="Header.name">x-li-track</stringProp>
                  <stringProp name="Header.value">{&quot;clientVersion&quot;:&quot;&quot;,&quot;mpVersion&quot;:&quot;&quot;,&quot;osName&quot;:&quot;web&quot;,&quot;timezoneOffset&quot;:2,&quot;timezone&quot;:&quot;Africa/Cairo&quot;,&quot;mpName&quot;:&quot;voyager-web&quot;,&quot;displayDensity&quot;:1.3499999046325684,&quot;displayWidth&quot;:1727.9998779296875,&quot;displayHeight&quot;:971.9999313354492}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.linkedin.com/sensorCollect/?action=reportMetrics" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;metrics&quot;:[{&quot;groupName&quot;:&quot;sharing&quot;,&quot;counterMetrics&quot;:{&quot;actor-list-load-success&quot;:1,&quot;guider-bar-prompt-load-success&quot;:9,&quot;original-share-creation-success&quot;:1}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">sensorCollect/?action=reportMetrics</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-restLi-protocol-version" elementType="Header">
                  <stringProp name="Header.name">x-restLi-protocol-version</stringProp>
                  <stringProp name="Header.value">2.0.0</stringProp>
                </elementProp>
                <elementProp name="x-li-lang" elementType="Header">
                  <stringProp name="Header.name">x-li-lang</stringProp>
                  <stringProp name="Header.value">en_US</stringProp>
                </elementProp>
                <elementProp name="Allow" elementType="Header">
                  <stringProp name="Header.name">Allow</stringProp>
                  <stringProp name="Header.value">POST</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="csrf-token" elementType="Header">
                  <stringProp name="Header.name">csrf-token</stringProp>
                  <stringProp name="Header.value">ajax:7989996966019083188</stringProp>
                </elementProp>
                <elementProp name="x-li-track" elementType="Header">
                  <stringProp name="Header.name">x-li-track</stringProp>
                  <stringProp name="Header.value">{&quot;clientVersion&quot;:&quot;&quot;,&quot;mpVersion&quot;:&quot;&quot;,&quot;osName&quot;:&quot;web&quot;,&quot;timezoneOffset&quot;:2,&quot;timezone&quot;:&quot;Africa/Cairo&quot;,&quot;mpName&quot;:&quot;voyager-web&quot;,&quot;displayDensity&quot;:1.3499999046325684,&quot;displayWidth&quot;:1727.9998779296875,&quot;displayHeight&quot;:971.9999313354492}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.linkedin.com/voyager/api/feed/comments?count=2&amp;q=comments&amp;sortOrder=RELEVANCE&amp;start=0&amp;updateId=activity%3A6928497217603309568" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="q" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">q</stringProp>
                  <stringProp name="Argument.value">comments</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="updateId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">updateId</stringProp>
                  <stringProp name="Argument.value">activity:6928497217603309568</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="sortOrder" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sortOrder</stringProp>
                  <stringProp name="Argument.value">RELEVANCE</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="count" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">count</stringProp>
                  <stringProp name="Argument.value">2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="start" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">start</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">voyager/api/feed/comments</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-restli-protocol-version" elementType="Header">
                  <stringProp name="Header.name">x-restli-protocol-version</stringProp>
                  <stringProp name="Header.value">2.0.0</stringProp>
                </elementProp>
                <elementProp name="x-li-lang" elementType="Header">
                  <stringProp name="Header.name">x-li-lang</stringProp>
                  <stringProp name="Header.value">en_US</stringProp>
                </elementProp>
                <elementProp name="x-li-page-instance" elementType="Header">
                  <stringProp name="Header.name">x-li-page-instance</stringProp>
                  <stringProp name="Header.value">urn:li:page:d_flagship3_feed;rmy+vms+QciTXBPa0W8YMA==</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">application/vnd.linkedin.normalized+json+2.1</stringProp>
                </elementProp>
                <elementProp name="csrf-token" elementType="Header">
                  <stringProp name="Header.name">csrf-token</stringProp>
                  <stringProp name="Header.value">ajax:7989996966019083188</stringProp>
                </elementProp>
                <elementProp name="x-li-track" elementType="Header">
                  <stringProp name="Header.name">x-li-track</stringProp>
                  <stringProp name="Header.value">{&quot;clientVersion&quot;:&quot;1.10.4115&quot;,&quot;mpVersion&quot;:&quot;1.10.4115&quot;,&quot;osName&quot;:&quot;web&quot;,&quot;timezoneOffset&quot;:2,&quot;timezone&quot;:&quot;Africa/Cairo&quot;,&quot;deviceFormFactor&quot;:&quot;DESKTOP&quot;,&quot;mpName&quot;:&quot;voyager-web&quot;,&quot;displayDensity&quot;:1.3499999046325684,&quot;displayWidth&quot;:1727.9998779296875,&quot;displayHeight&quot;:971.9999313354492}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.linkedin.com/sensorCollect/?action=reportMetrics" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;metrics&quot;:[{&quot;groupName&quot;:&quot;conversations&quot;,&quot;counterMetrics&quot;:{&quot;comment-creation-success&quot;:1}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">sensorCollect/?action=reportMetrics</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-restLi-protocol-version" elementType="Header">
                  <stringProp name="Header.name">x-restLi-protocol-version</stringProp>
                  <stringProp name="Header.value">2.0.0</stringProp>
                </elementProp>
                <elementProp name="x-li-lang" elementType="Header">
                  <stringProp name="Header.name">x-li-lang</stringProp>
                  <stringProp name="Header.value">en_US</stringProp>
                </elementProp>
                <elementProp name="Allow" elementType="Header">
                  <stringProp name="Header.name">Allow</stringProp>
                  <stringProp name="Header.value">POST</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="csrf-token" elementType="Header">
                  <stringProp name="Header.name">csrf-token</stringProp>
                  <stringProp name="Header.value">ajax:7989996966019083188</stringProp>
                </elementProp>
                <elementProp name="x-li-track" elementType="Header">
                  <stringProp name="Header.name">x-li-track</stringProp>
                  <stringProp name="Header.value">{&quot;clientVersion&quot;:&quot;&quot;,&quot;mpVersion&quot;:&quot;&quot;,&quot;osName&quot;:&quot;web&quot;,&quot;timezoneOffset&quot;:2,&quot;timezone&quot;:&quot;Africa/Cairo&quot;,&quot;mpName&quot;:&quot;voyager-web&quot;,&quot;displayDensity&quot;:1.3499999046325684,&quot;displayWidth&quot;:1727.9998779296875,&quot;displayHeight&quot;:971.9999313354492}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.linkedin.com/sensorCollect/?action=reportMetrics" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;metrics&quot;:[{&quot;groupName&quot;:&quot;feed&quot;,&quot;counterMetrics&quot;:{&quot;pem.Voyager - Feed - Comments.create-a-comment.totalCallCount&quot;:1}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">sensorCollect/?action=reportMetrics</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-restLi-protocol-version" elementType="Header">
                  <stringProp name="Header.name">x-restLi-protocol-version</stringProp>
                  <stringProp name="Header.value">2.0.0</stringProp>
                </elementProp>
                <elementProp name="x-li-lang" elementType="Header">
                  <stringProp name="Header.name">x-li-lang</stringProp>
                  <stringProp name="Header.value">en_US</stringProp>
                </elementProp>
                <elementProp name="Allow" elementType="Header">
                  <stringProp name="Header.name">Allow</stringProp>
                  <stringProp name="Header.value">POST</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="csrf-token" elementType="Header">
                  <stringProp name="Header.name">csrf-token</stringProp>
                  <stringProp name="Header.value">ajax:7989996966019083188</stringProp>
                </elementProp>
                <elementProp name="x-li-track" elementType="Header">
                  <stringProp name="Header.name">x-li-track</stringProp>
                  <stringProp name="Header.value">{&quot;clientVersion&quot;:&quot;&quot;,&quot;mpVersion&quot;:&quot;&quot;,&quot;osName&quot;:&quot;web&quot;,&quot;timezoneOffset&quot;:2,&quot;timezone&quot;:&quot;Africa/Cairo&quot;,&quot;mpName&quot;:&quot;voyager-web&quot;,&quot;displayDensity&quot;:1.3499999046325684,&quot;displayWidth&quot;:1727.9998779296875,&quot;displayHeight&quot;:971.9999313354492}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
